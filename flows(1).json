[
    {
        "id": "2bbc91332276492e",
        "type": "tab",
        "label": "RS485 BMS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ee5019c7044841dc",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "JK BMS assemble command",
        "func": "\nmsg.timeout = 500;\n\nfunction numberTo4HexBytes(number) {\n    // Ensure the number is within the valid range for a 32-bit unsigned integer\n    if (number < 0 || number > 0xFFFFFFFF) {\n        throw new Error(\"Number out of range for 4-byte representation\");\n    }\n\n    // Convert the number to a 4-byte array of hexadecimal values\n    const hexBytes = [\n        (number >> 24) & 0xFF,\n        (number >> 16) & 0xFF,\n        (number >> 8) & 0xFF,\n        number & 0xFF,\n    ];\n\n    return hexBytes;\n}\n\n// Parameters\nconst bmsTerminalNumber = numberTo4HexBytes(msg.payload.bmsID);\nconst commandWord = msg.payload.commandWord;\nconst dataWord = msg.payload.dataWord;\n\nconst frameSource = 0x03; // BMS = 1, Bluetooth = 2, GPS = 3, PC = 4\nconst transportType = 0x00; // Request frame = 0, Response frame = 1, BMS active upload = 2\nconst recordNumber = [0x00, 0x00, 0x00, 0x00]; // Replace with the record number (4 bytes)\n\n// Create the main part of the command array\nconst commandArray = [\n    ...bmsTerminalNumber,\n    commandWord, frameSource, transportType,\n    ...dataWord,\n    ...recordNumber,\n    0x68\n];\n\n// Calculate the frame length (including the STX, LENGTH, and checksum)\nconst frameLength = commandArray.length + 6;\n\n// Add STX and LENGTH (as two bytes) to the beginning of the command array\ncommandArray.unshift(0x57, (frameLength >> 8) & 0xFF, frameLength & 0xFF);\ncommandArray.unshift(0x4E);\n\n// Calculate the checksum (low 2 bytes)\nlet checksum = 0;\nfor (let i = 0; i < commandArray.length; i++) {\n    checksum += commandArray[i];\n}\nconst checksumLow2Bytes = checksum & 0xFFFF;\n\n// Add the checksum (high 2 bytes are not used) to the command array\ncommandArray.push(0x00, 0x00, (checksumLow2Bytes >> 8) & 0xFF, checksumLow2Bytes & 0xFF);\n\n// Create a Buffer from the array and set it as the payload\nmsg.payload = Buffer.from(commandArray);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 200,
        "wires": [
            [
                "cb4a21dcd0f5ee8e",
                "06cf1eb09c9ca572"
            ]
        ]
    },
    {
        "id": "06cf1eb09c9ca572",
        "type": "debug",
        "z": "2bbc91332276492e",
        "name": "JK BMS assembled command",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 280,
        "wires": []
    },
    {
        "id": "8bdc0d7e769a8a83",
        "type": "debug",
        "z": "2bbc91332276492e",
        "name": "JK BMS response data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2600,
        "y": 280,
        "wires": []
    },
    {
        "id": "78d48e793f526762",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 01 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 1480,
        "wires": []
    },
    {
        "id": "0cba8314c226f7de",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 02 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 1520,
        "wires": []
    },
    {
        "id": "55279c5ade6dc762",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 03 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 1560,
        "wires": []
    },
    {
        "id": "579a861230a036c1",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 04 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 1600,
        "wires": []
    },
    {
        "id": "a670a274368fbf9b",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 05 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 1640,
        "wires": []
    },
    {
        "id": "6b77b524f352252b",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 06 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 1680,
        "wires": []
    },
    {
        "id": "7411059f8f7883c7",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 07 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 1720,
        "wires": []
    },
    {
        "id": "f736b124cd79d2e5",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 08 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 1760,
        "wires": []
    },
    {
        "id": "331f9a5b1212bcb6",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 09 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 1800,
        "wires": []
    },
    {
        "id": "0862460904841bda",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 10 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 1840,
        "wires": []
    },
    {
        "id": "be73beb80073eb01",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 11 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 1880,
        "wires": []
    },
    {
        "id": "c56a748ba30ff94f",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 12 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 1920,
        "wires": []
    },
    {
        "id": "56698245c9fd5ce8",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 13 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 1960,
        "wires": []
    },
    {
        "id": "4c94dba2ac639b2c",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 14 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 2000,
        "wires": []
    },
    {
        "id": "163370c9cb7abc2f",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 15 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 2040,
        "wires": []
    },
    {
        "id": "a8fd2c75555b61fa",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "faec23951d2ab886",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 16 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 2080,
        "wires": []
    },
    {
        "id": "ef96d75da306a25b",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "79ecdf48bb8f7064",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 610,
        "y": 520,
        "wires": []
    },
    {
        "id": "8199a42903fa66a1",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "79ecdf48bb8f7064",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Strom",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "className": "",
        "x": 590,
        "y": 560,
        "wires": []
    },
    {
        "id": "0e8710357e49d63f",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "79ecdf48bb8f7064",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Leistung",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "x": 600,
        "y": 600,
        "wires": []
    },
    {
        "id": "b496959e95e89402",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "79ecdf48bb8f7064",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Akkustand",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 610,
        "y": 680,
        "wires": []
    },
    {
        "id": "be67f46cc21276f2",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "79ecdf48bb8f7064",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur BMS",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 720,
        "wires": []
    },
    {
        "id": "99fdd0fa20787726",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "79ecdf48bb8f7064",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur Akku 1",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 760,
        "wires": []
    },
    {
        "id": "aebfd7452308bdcc",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "79ecdf48bb8f7064",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur Akku 2",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 800,
        "wires": []
    },
    {
        "id": "b4e3e4501637d0cd",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 1 Gesamt",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('payload' in msg) {\n    i += 1; outputMessages[i] = { payload: msg.payload.voltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.current } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.power } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.state } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.remainigBattery } || null;\n\n    if ('temperature' in msg.payload) {\n        i += 1; outputMessages[i] = { payload: msg.payload.temperature.internal } || null;\n        i += 1; outputMessages[i] = { payload: msg.payload.temperature.battery1 } || null;\n        i += 1; outputMessages[i] = { payload: msg.payload.temperature.battery2 } || null;\n    }\n}\n\nreturn outputMessages;",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 660,
        "wires": [
            [
                "ef96d75da306a25b"
            ],
            [
                "8199a42903fa66a1"
            ],
            [
                "0e8710357e49d63f"
            ],
            [
                "d9dfc713c8aa97aa"
            ],
            [
                "b496959e95e89402"
            ],
            [
                "be67f46cc21276f2"
            ],
            [
                "99fdd0fa20787726"
            ],
            [
                "aebfd7452308bdcc"
            ]
        ]
    },
    {
        "id": "f998bf2f53326cfc",
        "type": "switch",
        "z": "2bbc91332276492e",
        "name": "",
        "property": "msg.payload.bmsID",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "101",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "102",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "103",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "104",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "105",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "106",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 3210,
        "y": 200,
        "wires": [
            [
                "e7730785a2e06452"
            ],
            [
                "cd76101ba54ceb6e"
            ],
            [
                "5ebdb7a826def5bc"
            ],
            [
                "799130b531a66900"
            ],
            [
                "a18733d058102677"
            ],
            [
                "d628d23d54dedebd"
            ]
        ]
    },
    {
        "id": "238db6ad15ed67c5",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 01 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 1480,
        "wires": []
    },
    {
        "id": "358ad9052b1da37a",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 02 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 1520,
        "wires": []
    },
    {
        "id": "55b549c8a9851044",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 03 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 1560,
        "wires": []
    },
    {
        "id": "00b097058140e7fd",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 04 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 1600,
        "wires": []
    },
    {
        "id": "33aeffdb6bba1234",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 05 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 1640,
        "wires": []
    },
    {
        "id": "5993be17749b7c0b",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 06 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 1680,
        "wires": []
    },
    {
        "id": "cb9a9f6e40c15411",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 07 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 1720,
        "wires": []
    },
    {
        "id": "c0b99174c3408e1d",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 08 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 1760,
        "wires": []
    },
    {
        "id": "557b3de54d49b88a",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 09 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 1800,
        "wires": []
    },
    {
        "id": "a95577d3c583abf3",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 10 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 1840,
        "wires": []
    },
    {
        "id": "4e0d3e67f0746ca1",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 11 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 1880,
        "wires": []
    },
    {
        "id": "7498f39659545a05",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 12 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 1920,
        "wires": []
    },
    {
        "id": "873b477c504b54ae",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 13 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 1960,
        "wires": []
    },
    {
        "id": "3afecee07c281346",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 14 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 2000,
        "wires": []
    },
    {
        "id": "6e11babc77fd1de8",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 15 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 2040,
        "wires": []
    },
    {
        "id": "d97904736f517d6e",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "2f8b045ae598abdd",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 16 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 2080,
        "wires": []
    },
    {
        "id": "3175da5e5e361343",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "46a25cd492714644",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 1370,
        "y": 520,
        "wires": []
    },
    {
        "id": "b057a54133d05f66",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "46a25cd492714644",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Strom",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "className": "",
        "x": 1350,
        "y": 560,
        "wires": []
    },
    {
        "id": "9c8dd8a0e0b657c8",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "46a25cd492714644",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Leistung",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "x": 1360,
        "y": 600,
        "wires": []
    },
    {
        "id": "63f30aab7f31f603",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "46a25cd492714644",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Akkustand",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1370,
        "y": 680,
        "wires": []
    },
    {
        "id": "a0e8aad28b6c972f",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "46a25cd492714644",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur BMS",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 720,
        "wires": []
    },
    {
        "id": "5e157b276637b439",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "46a25cd492714644",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur Akku 1",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 760,
        "wires": []
    },
    {
        "id": "af34af0220c18eea",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "46a25cd492714644",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur Akku 2",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 800,
        "wires": []
    },
    {
        "id": "90336f7f1053b7ac",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 01 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 1480,
        "wires": []
    },
    {
        "id": "c59d14b8dc72c7c8",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 02 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 1520,
        "wires": []
    },
    {
        "id": "e85842fce3ea94cc",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 03 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 1560,
        "wires": []
    },
    {
        "id": "4d329ab9a0c2bc7f",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 04 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 1600,
        "wires": []
    },
    {
        "id": "bdc46875a36469a4",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 05 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 1640,
        "wires": []
    },
    {
        "id": "5c12897f9d209af3",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 06 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 1680,
        "wires": []
    },
    {
        "id": "794a1d5c917a801e",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 07 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 1720,
        "wires": []
    },
    {
        "id": "a2ec473b685238ed",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 08 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 1760,
        "wires": []
    },
    {
        "id": "ac08fac5e967b3bc",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 09 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 1800,
        "wires": []
    },
    {
        "id": "f35e13b66e24a33b",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 10 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 1840,
        "wires": []
    },
    {
        "id": "5f78dc50e586badb",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 11 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 1880,
        "wires": []
    },
    {
        "id": "53263f05698873c7",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 12 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 1920,
        "wires": []
    },
    {
        "id": "197c5d6189932e48",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 13 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 1960,
        "wires": []
    },
    {
        "id": "5387743720dc3287",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 14 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 2000,
        "wires": []
    },
    {
        "id": "2cc5803bb95231cd",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 15 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 2040,
        "wires": []
    },
    {
        "id": "2717dbd4eb06ff88",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f7d1453700d307e",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 16 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 2080,
        "wires": []
    },
    {
        "id": "d7ff197e4c4fe74a",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "1fd8e0f2bd675866",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 3770,
        "y": 520,
        "wires": []
    },
    {
        "id": "0fc5639c17d4e865",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "1fd8e0f2bd675866",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Strom",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "className": "",
        "x": 3750,
        "y": 560,
        "wires": []
    },
    {
        "id": "4651ef421f0e828d",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "1fd8e0f2bd675866",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Leistung",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "x": 3760,
        "y": 600,
        "wires": []
    },
    {
        "id": "f4095caecc130829",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "1fd8e0f2bd675866",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Akkustand",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 3770,
        "y": 680,
        "wires": []
    },
    {
        "id": "ecc498d07660fa6d",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "1fd8e0f2bd675866",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur BMS",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 720,
        "wires": []
    },
    {
        "id": "93ccbe4e08b8de8b",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "1fd8e0f2bd675866",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur Akku 1",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 760,
        "wires": []
    },
    {
        "id": "2caa3110f9451a2f",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "1fd8e0f2bd675866",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur Akku 2",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 3790,
        "y": 800,
        "wires": []
    },
    {
        "id": "7bf388e19c575e9b",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 01 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 1480,
        "wires": []
    },
    {
        "id": "3caef0f83a1a4eff",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 02 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 1520,
        "wires": []
    },
    {
        "id": "dfeb47658932c1e7",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 03 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 1560,
        "wires": []
    },
    {
        "id": "9a5de28166fa4597",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 04 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 1600,
        "wires": []
    },
    {
        "id": "fc9b944b58be24eb",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 05 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 1640,
        "wires": []
    },
    {
        "id": "4b67b4069363fe80",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 06 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 1680,
        "wires": []
    },
    {
        "id": "b41935a4b21d6be5",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 07 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 1720,
        "wires": []
    },
    {
        "id": "639ca815d3c651ac",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 08 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 1760,
        "wires": []
    },
    {
        "id": "091f7b83873e99a6",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 09 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 1800,
        "wires": []
    },
    {
        "id": "7a647610a0412468",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 10 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 1840,
        "wires": []
    },
    {
        "id": "9f98befb6c7e0d05",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 11 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 1880,
        "wires": []
    },
    {
        "id": "33e7820be500bc29",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 12 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 1920,
        "wires": []
    },
    {
        "id": "a5b15960a91081a5",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 13 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 1960,
        "wires": []
    },
    {
        "id": "e879d28f84db0325",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 14 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 2000,
        "wires": []
    },
    {
        "id": "0ab0a886a23e8d35",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 15 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 2040,
        "wires": []
    },
    {
        "id": "45ea02cef4035ac7",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "ae87623ee72ce260",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 16 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 2080,
        "wires": []
    },
    {
        "id": "ecb6fa8aa3194953",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9bcdf74284720f6e",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 4550,
        "y": 520,
        "wires": []
    },
    {
        "id": "241eaa615b61f3c9",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9bcdf74284720f6e",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Strom",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "className": "",
        "x": 4530,
        "y": 560,
        "wires": []
    },
    {
        "id": "701a14f02e470f2a",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9bcdf74284720f6e",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Leistung",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "x": 4540,
        "y": 600,
        "wires": []
    },
    {
        "id": "76e25e600af9c97b",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9bcdf74284720f6e",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Akkustand",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 4550,
        "y": 680,
        "wires": []
    },
    {
        "id": "91db367a2801175e",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9bcdf74284720f6e",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur BMS",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 720,
        "wires": []
    },
    {
        "id": "9ef122de860b63f2",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9bcdf74284720f6e",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur Akku 1",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 760,
        "wires": []
    },
    {
        "id": "d8bbb1e35ed474bc",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9bcdf74284720f6e",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur Akku 2",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 4570,
        "y": 800,
        "wires": []
    },
    {
        "id": "845ba4930bc13aa4",
        "type": "debug",
        "z": "2bbc91332276492e",
        "name": "JK BMS response raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2280,
        "y": 280,
        "wires": []
    },
    {
        "id": "eced5acf8898859f",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "JK BMS parse response",
        "func": "function constructInt32(data_array, data_start, first_byte, last_byte) {\n    if (data_array[data_start + last_byte] == undefined) {\n        if (showWarnings) {\n            node.warn('(' + data_start + ') Data too short');\n        }\n        return null;\n    }\n    let result = 0;\n    for (let i = first_byte; i <= last_byte; i++) {\n        result = (result << 8) | data_array[data_start + i];\n    }\n    return result;\n}\n\n\nlet showWarnings = false;\nlet callback = { payload: 'retry' };\nlet data = { bmsID: constructInt32(msg.request_payload, 4, 0, 3) };\nlet debug = { bmsID: data.bmsID };\ndebug.payload = {};\n\n// no response\nif (msg.payload == undefined) {\n    if (showWarnings) {\n        node.warn('No response from device');\n    }\n    return [callback, null, null];\n}\n\n\n\n//////////////////////////////////////////////////\n// Split msg.payload\n//////////////////////////////////////////////////\n\n// 1 STX\nlet data_start  = 0;\nlet data_length = 2;\ndebug.payload.header = msg.payload.slice(data_start, data_start + data_length);\n\n// 2 LENGTH\ndata_start += data_length;\ndata_length = 2;\ndebug.payload.length = msg.payload.slice(data_start, data_start + data_length);\ndebug.payload.frame_length = constructInt32(debug.payload.length, 0, 0, 1);\n\n// 3 Terminal no.\ndata_start += data_length;\ndata_length = 4;\ndebug.payload.terminal_number = msg.payload.slice(data_start, data_start + data_length);\n\n// 4 Command word\ndata_start += data_length;\ndata_length = 1;\ndebug.payload.command_word = msg.payload.slice(data_start, data_start + data_length);\n\n// 5 The frame source\ndata_start += data_length;\ndata_length = 1;\ndebug.payload.frame_source = msg.payload.slice(data_start, data_start + data_length);\n\n// 6 Transport type\ndata_start += data_length;\ndata_length = 1;\ndebug.payload.transport_type = msg.payload.slice(data_start, data_start + data_length);\n\n// 7 Identifier + data\ndata_start += data_length;\ndata_length = debug.payload.frame_length - 18; // 18 = 2+4+1+1+1 + 4+1+4\ndata.payload = msg.payload.slice(data_start, data_start + data_length);\n\n// 8 Record number\ndata_start += data_length;\ndata_length = 4;\ndebug.payload.record_number = msg.payload.slice(data_start, data_start + data_length);\n\n// 9 End of identity\ndata_start += data_length;\ndata_length = 1;\ndebug.payload.footer = msg.payload.slice(data_start, data_start + data_length);\n\n// 10 The checksum\ndata_start += data_length;\ndata_length = 4;\ndebug.payload.remote_crc = msg.payload.slice(data_start, data_start + data_length);\n\n\n\n//////////////////////////////////////////////////\n// Validate msg.payload\n//////////////////////////////////////////////////\n\n// Check header\nif (debug.payload.header[0] != 0x4E || debug.payload.header[1] != 0x57) {\n    if (showWarnings){\n        if (debug.payload.header[0] == undefined) {\n            node.warn('Invalid header: undefined');\n        } else if (debug.payload.header[1] == undefined) {\n            node.warn('Invalid header: 0x' + debug.payload.header[0].toString(16).toUpperCase());\n        } else {\n            node.warn('Invalid header: 0x' + debug.payload.header[0].toString(16).toUpperCase() + debug.payload.header[1].toString(16).toUpperCase());\n        }\n    }\n    return [callback, null, debug];\n}\n\n// Check footer\nif (debug.payload.footer[0] != 0x68) {\n    if (showWarnings) {\n        if (debug.payload.footer[0] == undefined) {\n            node.warn('Invalid footer: undefined');\n        } else {\n            node.warn('Invalid footer: 0x' + debug.payload.footer[0].toString(16).toUpperCase());\n        }\n    }\n    return [callback, null, debug];\n}\n\n// Calculate the checksum (low 2 bytes)\nlet checksum = 0;\nfor (let i = 2; i < msg.payload.length - 4; i++) {\n    checksum += msg.payload[i];\n}\nchecksum += (checksum ^ 0xFFFF) & 0x00FF;\nchecksum += 0x0101;\n\nconst checksumLow2Bytes = checksum & 0xFFFF;\n\n// Check the checksum\ndebug.payload.calculated_crc = [0x00, 0x00, (checksumLow2Bytes >> 8) & 0xFF, checksumLow2Bytes & 0xFF];\nif (debug.payload.calculated_crc !== debug.payload.remote_crc) {\n    if (showWarnings) {\n        node.warn('JkModbus CRC Check failed!');\n    }\n    /* doesn't work - TODO\n    return [callback, null, debug]; */\n}\n\nreturn [null, data, debug];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 200,
        "wires": [
            [
                "4700294fed8cbc87"
            ],
            [
                "8bdc0d7e769a8a83",
                "4ea2d5676dcb74ec"
            ],
            [
                "bbc4a7353fd5fe4a"
            ]
        ],
        "outputLabels": [
            "callback if error",
            "data",
            "debug"
        ]
    },
    {
        "id": "bbc4a7353fd5fe4a",
        "type": "debug",
        "z": "2bbc91332276492e",
        "name": "JK BMS response debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2610,
        "y": 320,
        "wires": []
    },
    {
        "id": "3545eecd9d63c3eb",
        "type": "ui_numeric",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "pack_OverVoltageProtection",
        "tooltip": "",
        "group": "863156b2.06b228",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} V",
        "min": "10",
        "max": "150",
        "step": "0.01",
        "className": "",
        "x": 660,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "e26e7ec9678b352f",
        "type": "ui_numeric",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "pack_UnderVoltageProtection",
        "tooltip": "",
        "group": "863156b2.06b228",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} V",
        "min": "10",
        "max": "150",
        "step": "0.01",
        "className": "",
        "x": 670,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "4274939dc0e158da",
        "type": "ui_numeric",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cell_OverVoltageProtection",
        "tooltip": "",
        "group": "863156b2.06b228",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} V",
        "min": "1",
        "max": "4.5",
        "step": "0.001",
        "className": "",
        "x": 660,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "b7e1ff20199cf878",
        "type": "ui_numeric",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cell_OverVoltageProtectionRecovery",
        "tooltip": "",
        "group": "863156b2.06b228",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} V",
        "min": "1",
        "max": "4.5",
        "step": "0.001",
        "className": "",
        "x": 690,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "05c670e5a2582676",
        "type": "ui_numeric",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cell_OverVoltageProtectionDelay",
        "tooltip": "",
        "group": "863156b2.06b228",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} s",
        "min": "1",
        "max": "60",
        "step": "1",
        "className": "",
        "x": 670,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "c4cd71a432978dc3",
        "type": "ui_numeric",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cell_UnderVoltageProtection",
        "tooltip": "",
        "group": "863156b2.06b228",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} V",
        "min": "1",
        "max": "4.5",
        "step": "0.001",
        "className": "",
        "x": 660,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "33cd85d9a473b3a3",
        "type": "ui_numeric",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cell_UnderVoltageProtectionRecovery",
        "tooltip": "",
        "group": "863156b2.06b228",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} V",
        "min": "1",
        "max": "4.5",
        "step": "0.001",
        "className": "",
        "x": 690,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "2b6e7850e0598351",
        "type": "ui_numeric",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cell_UnderVoltageProtectionDelay",
        "tooltip": "",
        "group": "863156b2.06b228",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} s",
        "min": "1",
        "max": "60",
        "step": "1",
        "className": "",
        "x": 680,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "202d29d8e139ef95",
        "type": "ui_numeric",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "DischargeOverCurrentProtection",
        "tooltip": "",
        "group": "863156b2.06b228",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} A",
        "min": "1",
        "max": "1000",
        "step": "1",
        "className": "",
        "x": 670,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "b6a61818f28cb0ad",
        "type": "ui_numeric",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "DischargeOverCurrentProtectionDelay",
        "tooltip": "",
        "group": "863156b2.06b228",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} s",
        "min": "1",
        "max": "60",
        "step": "1",
        "className": "",
        "x": 690,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "36d6e60691ee5f7b",
        "type": "ui_numeric",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "ChargeOverCurrentProtection",
        "tooltip": "",
        "group": "863156b2.06b228",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} A",
        "min": "1",
        "max": "1000",
        "step": "1",
        "className": "",
        "x": 670,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "758adca96742d136",
        "type": "ui_numeric",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "ChargeOverCurrentProtectionDelay",
        "tooltip": "",
        "group": "863156b2.06b228",
        "order": 14,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} s",
        "min": "1",
        "max": "60",
        "step": "1",
        "className": "",
        "x": 680,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "067247e1fbce6d89",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 1 Einstellungen",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('settings' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_UnderVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtectionRecovery } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtectionRecovery } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_DischargeOverCurrentProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_DischargeOverCurrentProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_ChargeOverCurrentProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_ChargeOverCurrentProtectionDelay } || null;\n    /*\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    */\n}\n\nreturn outputMessages;",
        "outputs": 23,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 2460,
        "wires": [
            [
                "3545eecd9d63c3eb"
            ],
            [
                "e26e7ec9678b352f"
            ],
            [
                "4274939dc0e158da"
            ],
            [
                "b7e1ff20199cf878"
            ],
            [
                "05c670e5a2582676"
            ],
            [
                "c4cd71a432978dc3"
            ],
            [
                "33cd85d9a473b3a3"
            ],
            [
                "2b6e7850e0598351"
            ],
            [
                "202d29d8e139ef95"
            ],
            [
                "b6a61818f28cb0ad"
            ],
            [
                "36d6e60691ee5f7b"
            ],
            [
                "758adca96742d136"
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "5086327d7ef7fd9d",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "chargingActive",
        "tooltip": "",
        "group": "11ee4daf4a95fcab",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 620,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "8781af33621a9ecb",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "dischargingActive",
        "tooltip": "",
        "group": "11ee4daf4a95fcab",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 630,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "14ea4a575347f18c",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "balancingActive",
        "tooltip": "",
        "group": "11ee4daf4a95fcab",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 620,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "d2c507250accf995",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "batteryDisconnected",
        "tooltip": "",
        "group": "11ee4daf4a95fcab",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "604caf978f4333c8",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "lowCapacity",
        "tooltip": "",
        "group": "11ee4daf4a95fcab",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 610,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "303bc7192a26ce33",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "powerTubeOvertemperature",
        "tooltip": "",
        "group": "11ee4daf4a95fcab",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 660,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "e09d0beb52649938",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "chargingOvervoltage",
        "tooltip": "",
        "group": "11ee4daf4a95fcab",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "74c57d07612e500e",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "dischargingUndervoltage",
        "tooltip": "",
        "group": "11ee4daf4a95fcab",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 650,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "49b5d0b662f17154",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellPressureDifference",
        "tooltip": "",
        "group": "11ee4daf4a95fcab",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "4755e6f06b986d56",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "overtempAlarmInTheBatteryBox",
        "tooltip": "",
        "group": "11ee4daf4a95fcab",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 670,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "5a642b5d73c4ce6d",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "batteryLowTemperature",
        "tooltip": "",
        "group": "11ee4daf4a95fcab",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 650,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "a28980a3b2d9ef6f",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellOvervoltage",
        "tooltip": "",
        "group": "11ee4daf4a95fcab",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 620,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "f76f54557dcb0d0a",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellUndervoltage",
        "tooltip": "",
        "group": "11ee4daf4a95fcab",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 630,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "9896585c4115870b",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "alarm309_AProtection",
        "tooltip": "",
        "group": "11ee4daf4a95fcab",
        "order": 15,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "bf13e9b10a5100bc",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "alarm309_BProtection",
        "tooltip": "",
        "group": "11ee4daf4a95fcab",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 640,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "e21401e67a01db74",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 1 Status",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('status' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.status.chargingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.dischargingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.balancingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.batteryDisconnected } || null;\n}\nif ('warning' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.lowCapacity } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.powerTubeOvertemperature } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.chargingOvervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.dischargingUndervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellPressureDifference } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.overtemperaturAlarmInTheBatteryBox } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.batteryLowTemperature } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellOvervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellUndervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.alarm309_AProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.alarm309_BProtection } || null;\n}\n\nreturn outputMessages;",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1140,
        "wires": [
            [
                "5086327d7ef7fd9d"
            ],
            [
                "8781af33621a9ecb"
            ],
            [
                "14ea4a575347f18c"
            ],
            [
                "d2c507250accf995"
            ],
            [
                "604caf978f4333c8"
            ],
            [
                "303bc7192a26ce33"
            ],
            [
                "e09d0beb52649938"
            ],
            [
                "74c57d07612e500e"
            ],
            [
                "49b5d0b662f17154"
            ],
            [
                "4755e6f06b986d56"
            ],
            [
                "5a642b5d73c4ce6d"
            ],
            [
                "a28980a3b2d9ef6f"
            ],
            [
                "f76f54557dcb0d0a"
            ],
            [
                "9896585c4115870b"
            ],
            [
                "bf13e9b10a5100bc"
            ]
        ]
    },
    {
        "id": "5295eacc2a45cde6",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "chargingActive",
        "tooltip": "",
        "group": "666c1512339b3ee7",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1380,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "035d7bc9c48650c8",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "dischargingActive",
        "tooltip": "",
        "group": "666c1512339b3ee7",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1390,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "ec478801ea4c53b0",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "balancingActive",
        "tooltip": "",
        "group": "666c1512339b3ee7",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1380,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "d934c5c78bd46a52",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "batteryDisconnected",
        "tooltip": "",
        "group": "666c1512339b3ee7",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1400,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "2da24d5e120b6d01",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "lowCapacity",
        "tooltip": "",
        "group": "666c1512339b3ee7",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1370,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "f66d3aa122dd95e5",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "powerTubeOvertemperature",
        "tooltip": "",
        "group": "666c1512339b3ee7",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1420,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "a1ded36f5851733a",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "chargingOvervoltage",
        "tooltip": "",
        "group": "666c1512339b3ee7",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1400,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "d2732e4955adb09c",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "dischargingUndervoltage",
        "tooltip": "",
        "group": "666c1512339b3ee7",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1410,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "9502415d75570bd6",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellPressureDifference",
        "tooltip": "",
        "group": "666c1512339b3ee7",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1400,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "b38f509d0b40732b",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "overtempAlarmInTheBatteryBox",
        "tooltip": "",
        "group": "666c1512339b3ee7",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1430,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "f0886b8f4e003a54",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "batteryLowTemperature",
        "tooltip": "",
        "group": "666c1512339b3ee7",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1410,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "a42eb3b87e994c4f",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellOvervoltage",
        "tooltip": "",
        "group": "666c1512339b3ee7",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1380,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "74de77db3ad05c49",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellUndervoltage",
        "tooltip": "",
        "group": "666c1512339b3ee7",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1390,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "21177341524f40fe",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "alarm309_AProtection",
        "tooltip": "",
        "group": "666c1512339b3ee7",
        "order": 15,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1400,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "875be4c0e1a7ea70",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "alarm309_BProtection",
        "tooltip": "",
        "group": "666c1512339b3ee7",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1400,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "f7f394d41f752312",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "chargingActive",
        "tooltip": "",
        "group": "684770da0f52c65f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3780,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "d308bdce42c35774",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "dischargingActive",
        "tooltip": "",
        "group": "684770da0f52c65f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3790,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "83d17033125d2913",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "balancingActive",
        "tooltip": "",
        "group": "684770da0f52c65f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3780,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "3e32e51b2aa4dec3",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "batteryDisconnected",
        "tooltip": "",
        "group": "684770da0f52c65f",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3800,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "679d235f8b9143a2",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "lowCapacity",
        "tooltip": "",
        "group": "684770da0f52c65f",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3770,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "e7f7ab025369f0b3",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "powerTubeOvertemperature",
        "tooltip": "",
        "group": "684770da0f52c65f",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3820,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "f393484198458715",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "chargingOvervoltage",
        "tooltip": "",
        "group": "684770da0f52c65f",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3800,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "90d66abf9c79816a",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "dischargingUndervoltage",
        "tooltip": "",
        "group": "684770da0f52c65f",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3810,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "7f523044128cefc2",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellPressureDifference",
        "tooltip": "",
        "group": "684770da0f52c65f",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3800,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "c12d93579021ed59",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "overtempAlarmInTheBatteryBox",
        "tooltip": "",
        "group": "684770da0f52c65f",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3830,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "1cb8c5ffd3631d0d",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "batteryLowTemperature",
        "tooltip": "",
        "group": "684770da0f52c65f",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3810,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "b1ae4d904e2f0755",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellOvervoltage",
        "tooltip": "",
        "group": "684770da0f52c65f",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3780,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "e186f0fb1896015e",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellUndervoltage",
        "tooltip": "",
        "group": "684770da0f52c65f",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3790,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "ea1ff85dc141a6de",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "alarm309_AProtection",
        "tooltip": "",
        "group": "684770da0f52c65f",
        "order": 15,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3800,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "7066d0f505d88c1c",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "alarm309_BProtection",
        "tooltip": "",
        "group": "684770da0f52c65f",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3800,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "91c1b4eeea4cb705",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "chargingActive",
        "tooltip": "",
        "group": "0b1c673c3192045f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 4560,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "0deb5ffdd997acdb",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "dischargingActive",
        "tooltip": "",
        "group": "0b1c673c3192045f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 4570,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "8c0b24669d82901c",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "balancingActive",
        "tooltip": "",
        "group": "0b1c673c3192045f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 4560,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "d2809cdc96ae43d7",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "batteryDisconnected",
        "tooltip": "",
        "group": "0b1c673c3192045f",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 4580,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "4e40df0fb75daff1",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "lowCapacity",
        "tooltip": "",
        "group": "0b1c673c3192045f",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 4550,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "fc55a32762326045",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "powerTubeOvertemperature",
        "tooltip": "",
        "group": "0b1c673c3192045f",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 4600,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "b93a53280e06e920",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "chargingOvervoltage",
        "tooltip": "",
        "group": "0b1c673c3192045f",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 4580,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "5e97d3cf6c29af94",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "dischargingUndervoltage",
        "tooltip": "",
        "group": "0b1c673c3192045f",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 4590,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "df03d35d4d9947ec",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellPressureDifference",
        "tooltip": "",
        "group": "0b1c673c3192045f",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 4580,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "9aae8bcd118c114a",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "overtempAlarmInTheBatteryBox",
        "tooltip": "",
        "group": "0b1c673c3192045f",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 4610,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "54e8c1f15d499deb",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "batteryLowTemperature",
        "tooltip": "",
        "group": "0b1c673c3192045f",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 4590,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "5a2bc68a1d50c86b",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellOvervoltage",
        "tooltip": "",
        "group": "0b1c673c3192045f",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 4560,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "69cf8fb886e1c37c",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellUndervoltage",
        "tooltip": "",
        "group": "0b1c673c3192045f",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 4570,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "a02405e366bfcc96",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "alarm309_AProtection",
        "tooltip": "",
        "group": "0b1c673c3192045f",
        "order": 15,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 4580,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "92486559fc88362c",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "alarm309_BProtection",
        "tooltip": "",
        "group": "0b1c673c3192045f",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 4580,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "d9dfc713c8aa97aa",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "79ecdf48bb8f7064",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 590,
        "y": 640,
        "wires": []
    },
    {
        "id": "7091593a3e2f5ac4",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "46a25cd492714644",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1350,
        "y": 640,
        "wires": []
    },
    {
        "id": "d36dfc7529c3ef1b",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "1fd8e0f2bd675866",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3750,
        "y": 640,
        "wires": []
    },
    {
        "id": "8c81e990a9dc5197",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9bcdf74284720f6e",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 4530,
        "y": 640,
        "wires": []
    },
    {
        "id": "4ea2d5676dcb74ec",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "JK BMS parse data",
        "func": "function constructInt32(data_array, data_start, first_byte, last_byte) {\n    if (data_array[data_start + last_byte] == undefined) {\n        if (showWarnings) {\n            node.warn('(' + data_start + ') 0x' + data_array[data_start].toString(16).toUpperCase() + ' Data too short');\n        }\n        return null;\n    }\n    let result = 0;\n    for (let i = first_byte; i <= last_byte; i++) {\n        result = (result << 8) | data_array[data_start + i];\n    }\n    return result;\n}\n\n\n\nlet showWarnings = false;\nlet callback = { payload: 'retry' };\nlet data = {};\ndata.payload = { bmsID: msg.bmsID };\nlet data_start = 0;\nlet data_length;\n\n\n\n//////////////////////////////////////////////////\n// don't parse ACK response\n//////////////////////////////////////////////////\nif (msg.payload.length === 1) {\n    callback.payload = 'ack';\n    return [callback, null, null];\n}\n\n\n\n//////////////////////////////////////////////////\n// parse data response\n//////////////////////////////////////////////////\ndo {\n    switch (msg.payload[data_start]) {\n        case 0x79:  // cell voltages\n            data_length = 1 + constructInt32(msg.payload, data_start, 1, 1);\n\n            // Get number of cells or check data length\n            if (data.payload.cells == undefined){\n                data.payload.cells = constructInt32(msg.payload, data_start, 1, 1) / 3;\n            } else {\n                if (data.payload.cells != constructInt32(msg.payload, data_start, 1, 1) / 3) {\n                    if (showWarnings) {\n                        if (msg.payload[data_start + 1] == undefined) {\n                            node.warn('(' + data_start + ') 0x79 Data length invalid: undefined');\n                        } else {\n                            node.warn('(' + data_start + ') 0x79 Data length invalid: 0x' + constructInt32(msg.payload, data_start, 1, 1).toString(16).toUpperCase());\n                        }\n                    }\n                    return [callback, null, data];\n                }\n            }\n\n            // Get Values of all cells\n            data.payload.cell_voltage = [];\n            for (let cell = 0; cell < data.payload.cells; cell++) {\n                let cellpointer = 2 + cell * 3;\n\n                if (constructInt32(msg.payload, data_start + cellpointer, 0, 0) != cell + 1) {\n                    if (showWarnings) {\n                        if (constructInt32(msg.payload, data_start + cellpointer, 0, 0) == undefined) {\n                            node.warn('(' + data_start + ') 0x79 Cell number ' + cell + ' invalid: undefined');\n                        } else {\n                            node.warn('(' + data_start + ') 0x79 Cell number ' + cell + ' invalid: 0x' + constructInt32(msg.payload, data_start + cellpointer, 0, 0).toString(16).toUpperCase());\n                        }\n                    }\n                    return [callback, null, data];\n                }\n                data.payload.cell_voltage[cell] = constructInt32(msg.payload, data_start + cellpointer, 1, 2) / 1000;\n            }\n            break;\n\n        case 0x80:  // temperature mosfet\n            data_length = 2;\n            data.payload.temperature = data.payload.temperature || {};\n            data.payload.temperature.internal = constructInt32(msg.payload, data_start, 1, data_length);\n            if (data.payload.temperature.internal > 100) {\n                data.payload.temperature.internal = (data.payload.temperature.internal - 100) * -1;\n            }\n            if (data.payload.temperature.internal < -40) {\n                if (showWarnings) {\n                    node.warn('(' + data_start + ') 0x80 Temperature Mosfet out of range: ' + data.payload.temperature.internal);\n                }\n                return [callback, null, data];\n            }\n            break;\n\n        case 0x81:  // temperature battery 1\n            data_length = 2;\n            data.payload.temperature = data.payload.temperature || {};\n            data.payload.temperature.battery1 = constructInt32(msg.payload, data_start, 1, data_length);\n            if (data.payload.temperature.battery1 > 100) {\n                data.payload.temperature.battery1 = (data.payload.temperature.battery1 - 100) * -1;\n            }\n            if (data.payload.temperature.battery1 < -40) {\n                if (showWarnings) {\n                    node.warn('(' + data_start + ') 0x81 Temperature Battery 1 out of range: ' + data.payload.temperature.battery1);\n                }\n                return [callback, null, data];\n            }\n            break;\n\n        case 0x82:  // temperature battery 2\n            data_length = 2;\n            data.payload.temperature = data.payload.temperature || {};\n            data.payload.temperature.battery2 = constructInt32(msg.payload, data_start, 1, data_length);\n            if (data.payload.temperature.battery2 > 100) {\n                data.payload.temperature.battery2 = (data.payload.temperature.battery2 - 100) * -1;\n            }\n            if (data.payload.temperature.battery2 < -40) {\n                if (showWarnings) {\n                    node.warn('(' + data_start + ') 0x82 Temperature Battery 2 out of range: ' + data.payload.temperature.battery2);\n                }\n                return [callback, null, data];\n            }\n            break;\n\n        case 0x83:  // voltage\n            data_length = 2;\n            data.payload.voltage = constructInt32(msg.payload, data_start, 1, data_length) / 100;\n            break;\n\n        case 0x84:  // current\n            data_length = 2;\n            data.payload.current = constructInt32(msg.payload, data_start, 1, data_length);\n\n            let CURRENT_ZERO_CONSTANT = 32768\n            if (data.payload.current < CURRENT_ZERO_CONSTANT) {\n                data.payload.current = data.payload.current / -100;\n            } else {\n                data.payload.current = (data.payload.current - CURRENT_ZERO_CONSTANT) / 100;\n            }\n            /*\n            if (true /*Agreement version number >= 0x01* /) {\n                if ((data.payload.current & 0x8000) == 0x8000) {\n                    data.payload.current = data.payload.current & 0x7FFF;\n                } else {\n                    data.payload.current = data.payload.current & 0x7FFF * -1;\n                }\n            } else {\n                if (data.payload.current > 10000) {\n                    data.payload.current -= 10000;\n                    data.payload.current *= -1;\n                }\n            }\n\n            data.payload.current /= 100;*/\n            break;\n\n        case 0x85:  // remainig battery\n            data_length = 1;\n            data.payload.remainigBattery = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0x86:  // Number of battery temperature sensors\n            data_length = 1;\n            data.payload.numberOfNTC = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0x87:  // Cycle times of battery use\n            data_length = 2;\n            data.payload.numberOfBatteryCycles = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0x89:  // Total capacity of battery cycle\n            data_length = 4;\n            data.payload.batteryCycleCapacityAh = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0x8A:  // Total number of battery strings\n            data_length = 2;\n            \n            // Get number of cells or check data length\n            if (data.payload.cells == undefined) {\n                data.payload.cells = constructInt32(msg.payload, data_start, 1, data_length);\n            } else {\n                if (data.payload.cells != constructInt32(msg.payload, data_start, 1, data_length)) {\n                    if (showWarnings) {\n                        if (constructInt32(msg.payload, data_start, 1, 2) == undefined) {\n                            node.warn('(' + data_start + ') 0x8A Data length invalid: undefined');\n                        } else {\n                            node.warn('(' + data_start + ') 0x8A Data length invalid: 0x' + constructInt32(msg.payload, data_start, 1, data_length).toString(16).toUpperCase());\n                        }\n                    }\n                    return [callback, null, data];\n                }\n            }\n            break;\n\n        case 0x8B:  // Battery Warning Message\n            data_length = 2;\n            const batteryWarning = constructInt32(msg.payload, data_start, 1, data_length);\n\n            data.payload.warning = {};\n            data.payload.warning.lowCapacity                = (batteryWarning & 0b0000000000000001) > 0;\n            data.payload.warning.mosfetOverTemperature      = (batteryWarning & 0b0000000000000010) > 0;\n            data.payload.warning.chargingOverVoltage        = (batteryWarning & 0b0000000000000100) > 0;\n            data.payload.warning.dischargingUnderVoltage    = (batteryWarning & 0b0000000000001000) > 0;\n            data.payload.warning.batteryOverTemperature1    = (batteryWarning & 0b0000000000010000) > 0;\n            data.payload.warning.chargingOverCurrent        = (batteryWarning & 0b0000000000100000) > 0;\n            data.payload.warning.dischargingOverCurrent     = (batteryWarning & 0b0000000001000000) > 0;\n            data.payload.warning.cellVoltageDifference      = (batteryWarning & 0b0000000010000000) > 0;\n            data.payload.warning.batteryOverTemperature2    = (batteryWarning & 0b0000000100000000) > 0;\n            data.payload.warning.batteryUnderTemperature    = (batteryWarning & 0b0000001000000000) > 0;\n            data.payload.warning.cellOverVoltage            = (batteryWarning & 0b0000010000000000) > 0;\n            data.payload.warning.cellUnderVoltage           = (batteryWarning & 0b0000100000000000) > 0;\n            data.payload.warning.alarm309_AProtection       = (batteryWarning & 0b0001000000000000) > 0;\n            data.payload.warning.alarm309_BProtection       = (batteryWarning & 0b0010000000000000) > 0;\n            break;\n\n        case 0x8C:  // Battery status information\n            data_length = 2;\n            const batteryStatus = constructInt32(msg.payload, data_start, 1, data_length);\n\n            data.payload.status = {};\n            data.payload.status.chargingActive              = (batteryStatus & 0b0000000000000001) > 0;\n            data.payload.status.dischargingActive           = (batteryStatus & 0b0000000000000010) > 0;\n            data.payload.status.balancingActive             = (batteryStatus & 0b0000000000000100) > 0;\n            data.payload.status.batteryDisconnected         = (batteryStatus & 0b0000000000001000) > 0;\n            break;\n\n        case 0x8E:  // Total voltage overvoltage protection\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.pack_OverVoltageProtection = constructInt32(msg.payload, data_start, 1, data_length) / 100;\n            break;\n\n        case 0x8F:  // Total voltage under voltage protection\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.pack_UnderVoltageProtection = constructInt32(msg.payload, data_start, 1, data_length) / 100;\n            break;\n\n        case 0x90:  // Monomer overvoltage protection voltage\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.cell_OverVoltageProtection = constructInt32(msg.payload, data_start, 1, data_length) / 1000;\n            break;\n\n        case 0x91:  // Overvoltage recovery voltage of monomer\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.cell_OverVoltageProtectionRecovery = constructInt32(msg.payload, data_start, 1, data_length) / 1000;\n            break;\n\n        case 0x92:  // Monomer overvoltage protection delay\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.cell_OverVoltageProtectionDelay = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0x93:  // Unit undervoltage protection voltage\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.cell_UnderVoltageProtection = constructInt32(msg.payload, data_start, 1, data_length) / 1000;\n            break;\n\n        case 0x94:  // Monomer undervoltage recovery voltage\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.cell_UnderVoltageProtectionRecovery = constructInt32(msg.payload, data_start, 1, data_length) / 1000;\n            break;\n\n        case 0x95:  // Monomer undervoltage protection delay\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.cell_UnderVoltageProtectionDelay = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0x96:  // Core differential pressure protection value\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            //data.payload.settings.cell_BalanceTriggerVoltage = constructInt32(msg.payload, data_start, 1, data_length) / 1000;\n            break;\n\n        case 0x97:  // Discharge overcurrent protection value\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.pack_DischargeOverCurrentProtection = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0x98:  // Overcurrent delay of discharge\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.pack_DischargeOverCurrentProtectionDelay = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0x99:  // Charge overcurrent protection value\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.pack_ChargeOverCurrentProtection = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0x9A:  // Charge overcurrent delay\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.pack_ChargeOverCurrentProtectionDelay = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0x9B:  // Equalizing starting voltage\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            //data.payload.settings.cell_BalanceStartingVoltage = constructInt32(msg.payload, data_start, 1, data_length) / 1000;\n            break;\n\n        case 0x9C:  // Equalize the opening differential pressure\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            // TODO\n            break;\n\n        case 0x9D:  // Active equalizing switch\n            data_length = 1;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.balancingEnabled = (msg.payload[data_start + 1] & 0b00000001) > 0;\n            break;\n\n        case 0x9E:  // Power tube temperature protection value\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.bms_overTemperatureProtection = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0x9F:  // Power tube temperature recovery value\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.bms_overTemperatureProtectionRecovery = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xA0:  // Temperature protection value in the battery box\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.battery_overTemperatureProtection = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xA1:  // Temperature recovery value in the battery box\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.battery_overTemperatureProtectionRecovery = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xA2:  // Temperature difference protection value of battery\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.battery_temperatureDifferenceProtection = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xA3:  // Battery charging high temperature protection value\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.battery_overTemperatureProtectionCharge = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xA4:  // Battery discharge high temperature protection value\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.battery_overTemperatureProtectionDischarge = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xA5:  // Charge low temperature protection value\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.battery_underTemperatureProtectionCharge = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xA6:  // Charge low temperature protection recovery value\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.battery_underTemperatureProtectionRecoveryCharge = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xA7:  // Discharge low temperature protection value\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.battery_underTemperatureProtectionDischarge = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xA8:  // Discharge cryogenic protection recovery value\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.battery_underTemperatureProtectionRecoveryDischarge = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xA9:  // Battery string count Settings\n            data_length = 1;\n            data.payload.settings = data.payload.settings || {};\n            // TODO\n            break;\n\n        case 0xAA:  // Battery capacity setting\n            data_length = 4;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.batteryCapacity = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xAB:  // Charge MOS tube switch\n            data_length = 1;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.chargingEnabled = (msg.payload[data_start + 1] & 0b00000001) > 0;\n            break;\n\n        case 0xAC:  // Discharge MOS tube switch\n            data_length = 1;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.dischargingEnabled = (msg.payload[data_start + 1] & 0b00000001) > 0;\n            break;\n\n        case 0xAD:  // Current calibration\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.calibrationCurrent = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xAE:  // Guard plate address\n            data_length = 1;\n            data.payload.settings = data.payload.settings || {};\n            // TODO\n            break;\n\n        case 0xAF:  // The battery type\n            data_length = 1;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.batteryType = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xB0:  // Dormancy waiting time\n            data_length = 2;\n            data.payload.settings = data.payload.settings || {};\n            // TODO\n            break;\n\n        case 0xB1:  // Low capacity alarm value\n            data_length = 1;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.lowCapacityAlarm = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xB2:  // Change parameter password\n            data_length = 10;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.parameterPassword = msg.payload.slice(data_start + 1, data_start + data_length + 1).toString('ascii');\n            break;\n\n        case 0xB3:  // Special charger switch\n            data_length = 1;\n            data.payload.settings = data.payload.settings || {};\n            // TODO\n            break;\n\n        case 0xB4:  // The device ID code\n            data_length = 8;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.userPrivateData = msg.payload.slice(data_start + 1, data_start + data_length + 1).toString('ascii');\n            break;\n\n        case 0xB5:  // Manufacture date\n            data_length = 4;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.manufactureDate = msg.payload.slice(data_start + 1, data_start + data_length + 1).toString('ascii');\n            break;\n\n        case 0xB6:  // System working time\n            data_length = 4;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.systemWorkingTime = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xB7:  // Software version number\n            data_length = 15;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.softwareVersion = msg.payload.slice(data_start + 1, data_start + data_length + 1).toString('ascii');\n            break;\n\n        case 0xB8:  // Whether to start current calibration\n            data_length = 1;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.settings.calibrationCurrentStart = (msg.payload[data_start + 1] & 0b00000001) > 0;\n            break;\n\n        case 0xB9:  // Actual battery capacity\n            data_length = 4;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.actualBatteryCapacity = constructInt32(msg.payload, data_start, 1, data_length);\n            break;\n\n        case 0xBA:  // Name of Manufacturer ID\n            data_length = 24;\n            data.payload.settings = data.payload.settings || {};\n            data.payload.manufacturerID = msg.payload.slice(data_start + 1, data_start + data_length + 1).toString('ascii');\n            break;\n/*\n        case 0xBB:  // Restart the system\n            data_length = 1;\n            // TODO\n            break;\n\n        case 0xBC:  // factory data reset\n            data_length = 1;\n            // TODO\n            break;\n\n        case 0xBD:  // Remote Upgrade Identification\n            data_length = 1;\n            // TODO\n            break;\n\n        case 0xBE:  // The cell turns off GPS with low voltage\n            data_length = 2;\n            // TODO\n            break;\n\n        case 0xBF:  // Cell low voltage recovery GPS\n            data_length = 2;\n            // TODO\n            break;\n*/\n        case 0xC0:  // Agreement version number\n            data_length = 1;\n            // TODO\n            break;\n        \n        default:\n            if (showWarnings) {\n                if (constructInt32(msg.payload, data_start, 0, 0) == undefined) {\n                    node.warn('(' + data_start + ') Data identification code invalid: undefined');\n                } else {\n                    node.warn('(' + data_start + ') Data identification code invalid: 0x' + constructInt32(msg.payload, data_start, 0, 0).toString(16).toUpperCase());\n                }\n            }\n            return [callback, null, data];\n    }\n    data_start += 1 + data_length;\n} while (data_start < msg.payload.length);\n\nif ('current' in data.payload) {\n    // state\n    if (data.payload.current > 0) {\n        data.payload.state = 'charging';\n    } else if (data.payload.current < 0) {\n        data.payload.state = 'discharging';\n    } else {\n        data.payload.state = 'idle';\n    }\n\n    // calculate the power\n    if ('voltage' in data.payload) {\n        data.payload.power = Math.round(data.payload.voltage * data.payload.current * 10) / 10;\n    }\n}\n\ndata.payload.dataSource = 'RS485';\n\ncallback.payload = 'next';\nreturn [callback, data, null];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 200,
        "wires": [
            [
                "aed474d72d092d5e"
            ],
            [
                "2988d4cfb04bbf33",
                "5a7caaba3a3bafb8"
            ],
            [
                "6c49344733a6e66a"
            ]
        ],
        "outputLabels": [
            "callback",
            "valid_data",
            "invalid_data"
        ]
    },
    {
        "id": "4700294fed8cbc87",
        "type": "link out",
        "z": "2bbc91332276492e",
        "name": "callback JK BMS parse response",
        "mode": "link",
        "links": [
            "917ed60d5e23defa"
        ],
        "x": 2515,
        "y": 120,
        "wires": []
    },
    {
        "id": "917ed60d5e23defa",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "callback",
        "links": [
            "4700294fed8cbc87",
            "aed474d72d092d5e"
        ],
        "x": 715,
        "y": 120,
        "wires": [
            [
                "f5faff8e307183d7"
            ]
        ]
    },
    {
        "id": "aed474d72d092d5e",
        "type": "link out",
        "z": "2bbc91332276492e",
        "name": "callback JK BMS parse data",
        "mode": "link",
        "links": [
            "917ed60d5e23defa"
        ],
        "x": 2795,
        "y": 120,
        "wires": []
    },
    {
        "id": "2988d4cfb04bbf33",
        "type": "debug",
        "z": "2bbc91332276492e",
        "name": "JK BMS valid data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2870,
        "y": 280,
        "wires": []
    },
    {
        "id": "6c49344733a6e66a",
        "type": "debug",
        "z": "2bbc91332276492e",
        "name": "JK BMS invalid data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2880,
        "y": 320,
        "wires": []
    },
    {
        "id": "e7730785a2e06452",
        "type": "link out",
        "z": "2bbc91332276492e",
        "name": "BMS 1",
        "mode": "link",
        "links": [
            "1480630ab2ae165a",
            "321366901069dd7f",
            "71c763956aad41f7",
            "762d09811cb14f9e",
            "df8918c2c6586dca"
        ],
        "x": 3365,
        "y": 100,
        "wires": []
    },
    {
        "id": "cd76101ba54ceb6e",
        "type": "link out",
        "z": "2bbc91332276492e",
        "name": "BMS 2",
        "mode": "link",
        "links": [
            "5ab7e06eeee901a7",
            "66a1b776b221b1c2",
            "a3fa32ee94dbfec8",
            "d32ab872f4d315a8"
        ],
        "x": 3365,
        "y": 140,
        "wires": []
    },
    {
        "id": "a18733d058102677",
        "type": "link out",
        "z": "2bbc91332276492e",
        "name": "BMS 5",
        "mode": "link",
        "links": [
            "6534e2f6f8569b45",
            "6794e7188f696fd6",
            "add6ce895cf38791",
            "589a3661ac7e29d6",
            "b96da37df57e6bf5",
            "23d1951469a922b9",
            "77d7eef9041e0eb9",
            "20844f399f6b1867"
        ],
        "x": 3365,
        "y": 260,
        "wires": []
    },
    {
        "id": "d628d23d54dedebd",
        "type": "link out",
        "z": "2bbc91332276492e",
        "name": "BMS 6",
        "mode": "link",
        "links": [
            "af5752db1a9836c7",
            "4295c1e70c7fc6cc",
            "f9984d80aed7c777",
            "06a3b7a758e5d0c8",
            "ced4d8a9dcc015c8",
            "9ca33ef37697550a",
            "30f51aca31636c6a",
            "c0ab8f45dfcb250f"
        ],
        "x": 3365,
        "y": 300,
        "wires": []
    },
    {
        "id": "5ebdb7a826def5bc",
        "type": "link out",
        "z": "2bbc91332276492e",
        "name": "BMS 3",
        "mode": "link",
        "links": [
            "2d2a4f32619455ac",
            "ec7c4a51dfd0433d",
            "24f82a732999f57f",
            "587368700cfaae92"
        ],
        "x": 3365,
        "y": 180,
        "wires": []
    },
    {
        "id": "799130b531a66900",
        "type": "link out",
        "z": "2bbc91332276492e",
        "name": "BMS 4",
        "mode": "link",
        "links": [
            "b68c8a4cce317973",
            "642ce361bd8a6419",
            "f14651fbc8633ce4",
            "a2f890e16a2c8736"
        ],
        "x": 3365,
        "y": 220,
        "wires": []
    },
    {
        "id": "a42cb3fae3fc47de",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 1 Zellspannung",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('cell_voltage' in msg.payload) {\n    for (let cell = 0; cell < 16; cell++) {\n        i += 1; outputMessages[i] = { payload: msg.payload.cell_voltage[cell] } || null;\n    }\n}\n\nreturn outputMessages;",
        "outputs": 16,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1780,
        "wires": [
            [
                "78d48e793f526762"
            ],
            [
                "0cba8314c226f7de"
            ],
            [
                "55279c5ade6dc762"
            ],
            [
                "579a861230a036c1"
            ],
            [
                "a670a274368fbf9b"
            ],
            [
                "6b77b524f352252b"
            ],
            [
                "7411059f8f7883c7"
            ],
            [
                "f736b124cd79d2e5"
            ],
            [
                "331f9a5b1212bcb6"
            ],
            [
                "0862460904841bda"
            ],
            [
                "be73beb80073eb01"
            ],
            [
                "c56a748ba30ff94f"
            ],
            [
                "56698245c9fd5ce8"
            ],
            [
                "4c94dba2ac639b2c"
            ],
            [
                "163370c9cb7abc2f"
            ],
            [
                "a8fd2c75555b61fa"
            ]
        ]
    },
    {
        "id": "1480630ab2ae165a",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 1 Zellspannung",
        "links": [
            "e7730785a2e06452"
        ],
        "x": 155,
        "y": 1780,
        "wires": [
            [
                "a42cb3fae3fc47de"
            ]
        ]
    },
    {
        "id": "321366901069dd7f",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 1 Gesamt",
        "links": [
            "e7730785a2e06452"
        ],
        "x": 155,
        "y": 660,
        "wires": [
            [
                "b4e3e4501637d0cd"
            ]
        ]
    },
    {
        "id": "762d09811cb14f9e",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 1 Status",
        "links": [
            "e7730785a2e06452"
        ],
        "x": 155,
        "y": 1140,
        "wires": [
            [
                "e21401e67a01db74"
            ]
        ]
    },
    {
        "id": "71c763956aad41f7",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 1 Einstellungen",
        "links": [
            "e7730785a2e06452"
        ],
        "x": 155,
        "y": 2460,
        "wires": [
            [
                "067247e1fbce6d89"
            ]
        ]
    },
    {
        "id": "e521b084f7e18a32",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 2 Gesamt",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('payload' in msg) {\n    i += 1; outputMessages[i] = { payload: msg.payload.voltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.current } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.power } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.current_direction } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.remainigBattery } || null;\n\n    if ('temperatur' in msg.payload) {\n        i += 1; outputMessages[i] = { payload: msg.payload.temperatur.internal } || null;\n        i += 1; outputMessages[i] = { payload: msg.payload.temperatur.battery1 } || null;\n        i += 1; outputMessages[i] = { payload: msg.payload.temperatur.battery2 } || null;\n    }\n}\n\nreturn outputMessages;",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 660,
        "wires": [
            [
                "3175da5e5e361343"
            ],
            [
                "b057a54133d05f66"
            ],
            [
                "9c8dd8a0e0b657c8"
            ],
            [
                "7091593a3e2f5ac4"
            ],
            [
                "63f30aab7f31f603"
            ],
            [
                "a0e8aad28b6c972f"
            ],
            [
                "5e157b276637b439"
            ],
            [
                "af34af0220c18eea"
            ]
        ]
    },
    {
        "id": "5e2a8b7d2e9f6346",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 2 Einstellungen",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('settings' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_UnderVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtectionRecovery } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtectionRecovery } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_DischargeOverCurrentProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_DischargeOverCurrentProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_ChargeOverCurrentProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_ChargeOverCurrentProtectionDelay } || null;\n    /*\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    */\n}\n\nreturn outputMessages;",
        "outputs": 23,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 2460,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "aa5a4d1147847aa1",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 2 Status",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('status' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.status.chargingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.dischargingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.balancingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.batteryDisconnected } || null;\n}\nif ('warning' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.lowCapacity } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.powerTubeOvertemperature } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.chargingOvervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.dischargingUndervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellPressureDifference } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.overtemperaturAlarmInTheBatteryBox } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.batteryLowTemperature } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellOvervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellUndervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.alarm309_AProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.alarm309_BProtection } || null;\n}\n\nreturn outputMessages;",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1140,
        "wires": [
            [
                "5295eacc2a45cde6"
            ],
            [
                "035d7bc9c48650c8"
            ],
            [
                "ec478801ea4c53b0"
            ],
            [
                "d934c5c78bd46a52"
            ],
            [
                "2da24d5e120b6d01"
            ],
            [
                "f66d3aa122dd95e5"
            ],
            [
                "a1ded36f5851733a"
            ],
            [
                "d2732e4955adb09c"
            ],
            [
                "9502415d75570bd6"
            ],
            [
                "b38f509d0b40732b"
            ],
            [
                "f0886b8f4e003a54"
            ],
            [
                "a42eb3b87e994c4f"
            ],
            [
                "74de77db3ad05c49"
            ],
            [
                "21177341524f40fe"
            ],
            [
                "875be4c0e1a7ea70"
            ]
        ]
    },
    {
        "id": "58daa1733c7c1b2d",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 2 Zellspannung",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('cell_voltage' in msg.payload) {\n    for (let cell = 0; cell < 16; cell++) {\n        i += 1; outputMessages[i] = { payload: msg.payload.cell_voltage[cell] } || null;\n    }\n}\n\nreturn outputMessages;",
        "outputs": 16,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1780,
        "wires": [
            [
                "238db6ad15ed67c5"
            ],
            [
                "358ad9052b1da37a"
            ],
            [
                "55b549c8a9851044"
            ],
            [
                "00b097058140e7fd"
            ],
            [
                "33aeffdb6bba1234"
            ],
            [
                "5993be17749b7c0b"
            ],
            [
                "cb9a9f6e40c15411"
            ],
            [
                "c0b99174c3408e1d"
            ],
            [
                "557b3de54d49b88a"
            ],
            [
                "a95577d3c583abf3"
            ],
            [
                "4e0d3e67f0746ca1"
            ],
            [
                "7498f39659545a05"
            ],
            [
                "873b477c504b54ae"
            ],
            [
                "3afecee07c281346"
            ],
            [
                "6e11babc77fd1de8"
            ],
            [
                "d97904736f517d6e"
            ]
        ]
    },
    {
        "id": "a3fa32ee94dbfec8",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 2 Zellspannung",
        "links": [
            "cd76101ba54ceb6e"
        ],
        "x": 935,
        "y": 1780,
        "wires": [
            [
                "58daa1733c7c1b2d"
            ]
        ]
    },
    {
        "id": "5ab7e06eeee901a7",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 2 Gesamt",
        "links": [
            "cd76101ba54ceb6e"
        ],
        "x": 935,
        "y": 660,
        "wires": [
            [
                "e521b084f7e18a32"
            ]
        ]
    },
    {
        "id": "66a1b776b221b1c2",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 2 Status",
        "links": [
            "cd76101ba54ceb6e"
        ],
        "x": 935,
        "y": 1140,
        "wires": [
            [
                "aa5a4d1147847aa1"
            ]
        ]
    },
    {
        "id": "d32ab872f4d315a8",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 2 Einstellungen",
        "links": [
            "cd76101ba54ceb6e"
        ],
        "x": 935,
        "y": 2460,
        "wires": [
            [
                "5e2a8b7d2e9f6346"
            ]
        ]
    },
    {
        "id": "9099716f4668e25d",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 6 Gesamt",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('payload' in msg) {\n    i += 1; outputMessages[i] = { payload: msg.payload.voltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.current } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.power } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.current_direction } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.remainigBattery } || null;\n\n    if ('temperatur' in msg.payload) {\n        i += 1; outputMessages[i] = { payload: msg.payload.temperatur.internal } || null;\n        i += 1; outputMessages[i] = { payload: msg.payload.temperatur.battery1 } || null;\n        i += 1; outputMessages[i] = { payload: msg.payload.temperatur.battery2 } || null;\n    }\n}\n\nreturn outputMessages;",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4240,
        "y": 660,
        "wires": [
            [
                "ecb6fa8aa3194953"
            ],
            [
                "241eaa615b61f3c9"
            ],
            [
                "701a14f02e470f2a"
            ],
            [
                "8c81e990a9dc5197"
            ],
            [
                "76e25e600af9c97b"
            ],
            [
                "91db367a2801175e"
            ],
            [
                "9ef122de860b63f2"
            ],
            [
                "d8bbb1e35ed474bc"
            ]
        ]
    },
    {
        "id": "ea1d7bfe5c5cbe1f",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 6 Einstellungen",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('settings' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_UnderVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtectionRecovery } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtectionRecovery } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_DischargeOverCurrentProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_DischargeOverCurrentProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_ChargeOverCurrentProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_ChargeOverCurrentProtectionDelay } || null;\n    /*\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    */\n}\n\nreturn outputMessages;",
        "outputs": 23,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4260,
        "y": 2460,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "0e1295dbb3733a48",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 6 Status",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('status' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.status.chargingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.dischargingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.balancingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.batteryDisconnected } || null;\n}\nif ('warning' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.lowCapacity } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.powerTubeOvertemperature } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.chargingOvervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.dischargingUndervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellPressureDifference } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.overtemperaturAlarmInTheBatteryBox } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.batteryLowTemperature } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellOvervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellUndervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.alarm309_AProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.alarm309_BProtection } || null;\n}\n\nreturn outputMessages;",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4240,
        "y": 1140,
        "wires": [
            [
                "91c1b4eeea4cb705"
            ],
            [
                "0deb5ffdd997acdb"
            ],
            [
                "8c0b24669d82901c"
            ],
            [
                "d2809cdc96ae43d7"
            ],
            [
                "4e40df0fb75daff1"
            ],
            [
                "fc55a32762326045"
            ],
            [
                "b93a53280e06e920"
            ],
            [
                "5e97d3cf6c29af94"
            ],
            [
                "df03d35d4d9947ec"
            ],
            [
                "9aae8bcd118c114a"
            ],
            [
                "54e8c1f15d499deb"
            ],
            [
                "5a2bc68a1d50c86b"
            ],
            [
                "69cf8fb886e1c37c"
            ],
            [
                "a02405e366bfcc96"
            ],
            [
                "92486559fc88362c"
            ]
        ]
    },
    {
        "id": "ae449fe54ecc914d",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 6 Zellspannung",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('cell_voltage' in msg.payload) {\n    for (let cell = 0; cell < 16; cell++) {\n        i += 1; outputMessages[i] = { payload: msg.payload.cell_voltage[cell] } || null;\n    }\n}\n\nreturn outputMessages;",
        "outputs": 16,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4260,
        "y": 1780,
        "wires": [
            [
                "7bf388e19c575e9b"
            ],
            [
                "3caef0f83a1a4eff"
            ],
            [
                "dfeb47658932c1e7"
            ],
            [
                "9a5de28166fa4597"
            ],
            [
                "fc9b944b58be24eb"
            ],
            [
                "4b67b4069363fe80"
            ],
            [
                "b41935a4b21d6be5"
            ],
            [
                "639ca815d3c651ac"
            ],
            [
                "091f7b83873e99a6"
            ],
            [
                "7a647610a0412468"
            ],
            [
                "9f98befb6c7e0d05"
            ],
            [
                "33e7820be500bc29"
            ],
            [
                "a5b15960a91081a5"
            ],
            [
                "e879d28f84db0325"
            ],
            [
                "0ab0a886a23e8d35"
            ],
            [
                "45ea02cef4035ac7"
            ]
        ]
    },
    {
        "id": "f9984d80aed7c777",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 6 Zellspannung",
        "links": [
            "d628d23d54dedebd"
        ],
        "x": 4115,
        "y": 1780,
        "wires": [
            [
                "ae449fe54ecc914d"
            ]
        ]
    },
    {
        "id": "af5752db1a9836c7",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 6 Gesamt",
        "links": [
            "d628d23d54dedebd"
        ],
        "x": 4115,
        "y": 660,
        "wires": [
            [
                "9099716f4668e25d"
            ]
        ]
    },
    {
        "id": "4295c1e70c7fc6cc",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 6 Status",
        "links": [
            "d628d23d54dedebd"
        ],
        "x": 4115,
        "y": 1140,
        "wires": [
            [
                "0e1295dbb3733a48"
            ]
        ]
    },
    {
        "id": "06a3b7a758e5d0c8",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 6 Einstellungen",
        "links": [
            "d628d23d54dedebd"
        ],
        "x": 4115,
        "y": 2460,
        "wires": [
            [
                "ea1d7bfe5c5cbe1f"
            ]
        ]
    },
    {
        "id": "07b7727d92da0a35",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 5 Gesamt",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('payload' in msg) {\n    i += 1; outputMessages[i] = { payload: msg.payload.voltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.current } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.power } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.current_direction } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.remainigBattery } || null;\n\n    if ('temperatur' in msg.payload) {\n        i += 1; outputMessages[i] = { payload: msg.payload.temperatur.internal } || null;\n        i += 1; outputMessages[i] = { payload: msg.payload.temperatur.battery1 } || null;\n        i += 1; outputMessages[i] = { payload: msg.payload.temperatur.battery2 } || null;\n    }\n}\n\nreturn outputMessages;",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3460,
        "y": 660,
        "wires": [
            [
                "d7ff197e4c4fe74a"
            ],
            [
                "0fc5639c17d4e865"
            ],
            [
                "4651ef421f0e828d"
            ],
            [
                "d36dfc7529c3ef1b"
            ],
            [
                "f4095caecc130829"
            ],
            [
                "ecc498d07660fa6d"
            ],
            [
                "93ccbe4e08b8de8b"
            ],
            [
                "2caa3110f9451a2f"
            ]
        ]
    },
    {
        "id": "2fab432499b3d36c",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 5 Einstellungen",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('settings' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_UnderVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtectionRecovery } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtectionRecovery } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_DischargeOverCurrentProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_DischargeOverCurrentProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_ChargeOverCurrentProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_ChargeOverCurrentProtectionDelay } || null;\n    /*\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    */\n}\n\nreturn outputMessages;",
        "outputs": 23,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3480,
        "y": 2460,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "83e2861cbd49e9cc",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 5 Status",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('status' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.status.chargingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.dischargingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.balancingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.batteryDisconnected } || null;\n}\nif ('warning' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.lowCapacity } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.powerTubeOvertemperature } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.chargingOvervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.dischargingUndervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellPressureDifference } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.overtemperaturAlarmInTheBatteryBox } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.batteryLowTemperature } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellOvervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellUndervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.alarm309_AProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.alarm309_BProtection } || null;\n}\n\nreturn outputMessages;",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3460,
        "y": 1140,
        "wires": [
            [
                "f7f394d41f752312"
            ],
            [
                "d308bdce42c35774"
            ],
            [
                "83d17033125d2913"
            ],
            [
                "3e32e51b2aa4dec3"
            ],
            [
                "679d235f8b9143a2"
            ],
            [
                "e7f7ab025369f0b3"
            ],
            [
                "f393484198458715"
            ],
            [
                "90d66abf9c79816a"
            ],
            [
                "7f523044128cefc2"
            ],
            [
                "c12d93579021ed59"
            ],
            [
                "1cb8c5ffd3631d0d"
            ],
            [
                "b1ae4d904e2f0755"
            ],
            [
                "e186f0fb1896015e"
            ],
            [
                "ea1ff85dc141a6de"
            ],
            [
                "7066d0f505d88c1c"
            ]
        ]
    },
    {
        "id": "3f3ccf83118c871e",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 5 Zellspannung",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('cell_voltage' in msg.payload) {\n    for (let cell = 0; cell < 16; cell++) {\n        i += 1; outputMessages[i] = { payload: msg.payload.cell_voltage[cell] } || null;\n    }\n}\n\nreturn outputMessages;",
        "outputs": 16,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3480,
        "y": 1780,
        "wires": [
            [
                "90336f7f1053b7ac"
            ],
            [
                "c59d14b8dc72c7c8"
            ],
            [
                "e85842fce3ea94cc"
            ],
            [
                "4d329ab9a0c2bc7f"
            ],
            [
                "bdc46875a36469a4"
            ],
            [
                "5c12897f9d209af3"
            ],
            [
                "794a1d5c917a801e"
            ],
            [
                "a2ec473b685238ed"
            ],
            [
                "ac08fac5e967b3bc"
            ],
            [
                "f35e13b66e24a33b"
            ],
            [
                "5f78dc50e586badb"
            ],
            [
                "53263f05698873c7"
            ],
            [
                "197c5d6189932e48"
            ],
            [
                "5387743720dc3287"
            ],
            [
                "2cc5803bb95231cd"
            ],
            [
                "2717dbd4eb06ff88"
            ]
        ]
    },
    {
        "id": "add6ce895cf38791",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 5 Zellspannung",
        "links": [
            "a18733d058102677"
        ],
        "x": 3335,
        "y": 1780,
        "wires": [
            [
                "3f3ccf83118c871e"
            ]
        ]
    },
    {
        "id": "6534e2f6f8569b45",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 5 Gesamt",
        "links": [
            "a18733d058102677"
        ],
        "x": 3335,
        "y": 660,
        "wires": [
            [
                "07b7727d92da0a35"
            ]
        ]
    },
    {
        "id": "6794e7188f696fd6",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 5 Status",
        "links": [
            "a18733d058102677"
        ],
        "x": 3335,
        "y": 1140,
        "wires": [
            [
                "83e2861cbd49e9cc"
            ]
        ]
    },
    {
        "id": "589a3661ac7e29d6",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 5 Einstellungen",
        "links": [
            "a18733d058102677"
        ],
        "x": 3335,
        "y": 2460,
        "wires": [
            [
                "2fab432499b3d36c"
            ]
        ]
    },
    {
        "id": "2b4d0b293eddd0b3",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "JK BMS translate command",
        "func": "function numberToBytes(number, byteCount) {\n    let bytes = [];\n    for (let i = 0; i < byteCount; i++) {\n        bytes.unshift(number & 0xFF); // Add the least significant byte of number to the start of the array\n        number >>= 8; // Shift the number 8 bits to the right to prepare for the next iteration\n    }\n    return bytes;\n}\n\nfunction stringToBytes(str) {\n    let byteArray = [];\n    for (let i = 0; i < str.length; i++) {\n        byteArray.push(str.charCodeAt(i));\n    }\n    return byteArray;\n}\n\n\n\nswitch (msg.payload.command) {\n    case 'activate':\n        msg.payload.commandWord = 0x01;\n        break;\n\n    case 'write':\n        msg.payload.commandWord = 0x02;\n        break;\n\n    case 'read':\n        msg.payload.commandWord = 0x03;\n        break;\n\n    case 'pairCode':\n        msg.payload.commandWord = 0x05;\n        break;\n\n    case 'readAll':\n        msg.payload.commandWord = 0x06;\n        break;\n    \n    default:\n        msg.payload.commandWord = 0x00;\n        break;\n}\n\n\nlet dataIdentifier = [0x00];\nlet data_length = 0;\nlet data = [];\n\nswitch (msg.payload.dataIdentifier) {\n    case 'cell_voltage':\n        dataIdentifier = [0x79];\n        break;\n\n    case 'temperatur_internal':\n        dataIdentifier = [0x80];\n        break;\n\n    case 'temperatur_battery1':\n        dataIdentifier = [0x81];\n        break;\n\n    case 'temperatur_battery2':\n        dataIdentifier = [0x82];\n        break;\n\n    case 'voltage':\n        dataIdentifier = [0x83];\n        break;\n\n    case 'current':\n        dataIdentifier = [0x84];\n        break;\n\n    case 'remainigBattery':\n        dataIdentifier = [0x85];\n        break;\n\n    case 'numberOfNTC':\n        dataIdentifier = [0x86];\n        break;\n\n    case 'numberOfBatteryCycles':\n        dataIdentifier = [0x87];\n        break;\n\n    case 'batteryCycleCapacityAh':\n        dataIdentifier = [0x89];\n        break;\n\n    case 'battery_strings':\n        dataIdentifier = [0x8A];\n        break;\n\n    case 'warning':\n        dataIdentifier = [0x8B];\n        break;\n\n    case 'status':\n        dataIdentifier = [0x8C];\n        break;\n\n    case 'pack_OverVoltageProtection':\n        dataIdentifier = [0x8E];\n        if (msg.payload.command === 'write') {\n            data_length = 2;\n            data = numberToBytes(msg.payload.value * 100, data_length);\n        }\n        break;\n\n    case 'pack_UnderVoltageProtection':\n        dataIdentifier = [0x8F];\n        if (msg.payload.command === 'write') {\n            data_length = 2;\n            data = numberToBytes(msg.payload.value * 100, data_length);\n        }\n        break;\n\n    case 'cell_OverVoltageProtection':\n        dataIdentifier = [0x90];\n        if (msg.payload.command === 'write') {\n            data_length = 2;\n            data = numberToBytes(msg.payload.value * 1000, data_length);\n        }\n        break;\n\n    case 'cell_OverVoltageProtectionRecovery':\n        dataIdentifier = [0x91];\n        if (msg.payload.command === 'write') {\n            data_length = 2;\n            data = numberToBytes(msg.payload.value * 1000, data_length);\n        }\n        break;\n\n    case 'cell_OverVoltageProtectionDelay':\n        dataIdentifier = [0x92];\n        if (msg.payload.command === 'write') {\n            data_length = 2;\n            data = numberToBytes(msg.payload.value, data_length);\n        }\n        break;\n\n    case 'cell_UnderVoltageProtection':\n        dataIdentifier = [0x93];\n        if (msg.payload.command === 'write') {\n            data_length = 2;\n            data = numberToBytes(msg.payload.value * 1000, data_length);\n        }\n        break;\n\n    case 'cell_UnderVoltageProtectionRecovery':\n        dataIdentifier = [0x94];\n        if (msg.payload.command === 'write') {\n            data_length = 2;\n            data = numberToBytes(msg.payload.value * 1000, data_length);\n        }\n        break;\n\n    case 'cell_UnderVoltageProtectionDelay':\n        dataIdentifier = [0x95];\n        if (msg.payload.command === 'write') {\n            data_length = 2;\n            data = numberToBytes(msg.payload.value, data_length);\n        }\n        break;\n}\n\nswitch (msg.payload.command) {\n    case 'write':\n        msg.payload.dataWord = dataIdentifier.concat(data);\n        break;\n\n    case 'pairCode':\n        msg.payload.dataWord = stringToBytes(msg.payload.value);\n        break;\n\n    default:\n        msg.payload.dataWord = dataIdentifier;\n        break;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 200,
        "wires": [
            [
                "ee5019c7044841dc",
                "92565bff84204031"
            ]
        ]
    },
    {
        "id": "92565bff84204031",
        "type": "debug",
        "z": "2bbc91332276492e",
        "name": "JK BMS translated command",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 280,
        "wires": []
    },
    {
        "id": "1b7f0d23df1b51c2",
        "type": "debug",
        "z": "2bbc91332276492e",
        "name": "JK BMS command",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 280,
        "wires": []
    },
    {
        "id": "f5faff8e307183d7",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "JK BMS command queue",
        "func": "function addCommand(cmd) {\n    switch (cmd.command) {\n        case 'read':\n            // Don't add it if there's already a 'readAll' or 'read' command for the same bmsID and dataIdentifier\n            if (!commandQueue.some(command => command.bmsID === cmd.bmsID && (command.command === 'readAll' || (command.command === 'read' && command.dataIdentifier === cmd.dataIdentifier)))) {\n                commandQueue.push(Object.assign({}, cmd));\n            }\n            break;\n        \n        case 'write':\n            // If there's already a 'write' command for the same bmsID and dataIdentifier, update its value. Otherwise, add it\n            const existingWriteCommand = commandQueue.find(command => command.bmsID === cmd.bmsID && command.command === 'write' && command.dataIdentifier === cmd.dataIdentifier);\n            if (existingWriteCommand) {\n                existingWriteCommand.value = cmd.value;\n            } else {\n                commandQueue.push(Object.assign({}, cmd));\n            }\n            break;\n        \n        default:\n            // Don't add it if there's already the same command for the same bmsID\n            if (!commandQueue.some(command => command.bmsID === cmd.bmsID && command.command === cmd.command)) {\n                commandQueue.push(Object.assign({}, cmd));\n            }\n            break;\n    }\n}\n\nfunction getNextCommand() {\n    return commandQueue.shift();\n}\n\nfunction saveAllToContext() {\n    context.set('commandQueue', commandQueue);\n    context.set('currentCommand', currentCommand);\n    context.set('lastBmsCommand', lastBmsCommand);\n    context.set('activateBms', activateBms);\n    context.set('busy', busy);\n    measureBusUsage();\n}\n\nfunction measureBusUsage() {\n    let totalBusyTime = context.get('totalBusyTime') || 0;\n    let busyStartTime = context.get('busyStartTime') || null;\n    const programStartTime = context.get('programStartTime') || context.set('programStartTime', Date.now());\n\n    if (busy && busyStartTime === null) {\n        busyStartTime = Date.now();\n    }\n\n    if (!busy && busyStartTime !== null) {\n        totalBusyTime += Date.now() - busyStartTime;\n        busyStartTime = null;\n    }\n\n    let totalElapsedTime = Date.now() - programStartTime;  // Assuming you record the start time of the program\n    debug.payload = Math.floor(totalBusyTime / totalElapsedTime * 100) + '%';\n    context.set('totalBusyTime', totalBusyTime);\n    context.set('busyStartTime', busyStartTime);\n}\n\n\n\nconst activateBmsTime = 15000;\nconst retryLater = true;\n\nlet commandQueue = context.get('commandQueue') || [];\nlet currentCommand = context.get('currentCommand') || {};\nlet lastBmsCommand = context.get('lastBmsCommand') || [];\nlet activateBms = context.get('activateBms') || false;\nlet busy = context.get('busy') || false;\nlet debug = {};\n\n\n\n//////////////////////////////////////////////////\n// Reset busy or add command to Queue\n//////////////////////////////////////////////////\nif (msg.payload === 'retry' || msg.payload === 'next' || msg.payload === 'ack'){\n    // recieved callback\n    busy = false;\n    \n    // read setting after writing\n    if (currentCommand.command === 'write' || msg.payload === 'ack') {\n        addCommand({ bmsID: currentCommand.bmsID, command: 'read', dataIdentifier: currentCommand.dataIdentifier});\n    }\n\n} else {\n    // recieved new command\n    addCommand(msg.payload);\n}\n\n\n\n//////////////////////////////////////////////////\n// Send next command if not busy\n//////////////////////////////////////////////////\nif (busy) {\n    saveAllToContext();\n    return [null, null];\n    \n} else {\n    if ((!activateBms) || (msg.payload !== 'ack')) {\n        // set current command\n        if (msg.payload === 'retry') {\n            currentCommand.retry = currentCommand.retry + 1 || 1;\n\n            if (retryLater) {\n                addCommand(currentCommand);\n                currentCommand = getNextCommand();\n            }\n        } else {\n            currentCommand = getNextCommand();\n        }\n    }\n\n    if (currentCommand != null) {\n        // activation necessary?\n        if (activateBmsTime != null && currentCommand != null) {\n            activateBms = (Date.now() > lastBmsCommand[currentCommand.bmsID] + activateBmsTime);\n        } else {\n            activateBms = false;\n        }\n\n        if (activateBms) {\n            // send activation\n            lastBmsCommand[currentCommand.bmsID] = Date.now();\n            busy = true;\n            saveAllToContext();\n            return [{ payload: { bmsID: currentCommand.bmsID, command: 'activate' }}, null];\n\n        } else {\n            // send command\n            lastBmsCommand[currentCommand.bmsID] = Date.now();\n            busy = true;\n            saveAllToContext();\n            return [{ payload: currentCommand }, null];\n        }\n            \n    } else {\n        // nothing to send\n        saveAllToContext();\n        return [null, debug];\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 200,
        "wires": [
            [
                "1b7f0d23df1b51c2",
                "2b4d0b293eddd0b3"
            ],
            [
                "5df00c0abfd0fa43"
            ]
        ]
    },
    {
        "id": "0da3b015be17fafd",
        "type": "inject",
        "z": "2bbc91332276492e",
        "name": "BMS 1 readAll",
        "props": [
            {
                "p": "payload.bmsID",
                "v": "101",
                "vt": "num"
            },
            {
                "p": "payload.command",
                "v": "readAll",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 520,
        "y": 40,
        "wires": [
            [
                "f5faff8e307183d7"
            ]
        ]
    },
    {
        "id": "e22ae722fdeff4fd",
        "type": "inject",
        "z": "2bbc91332276492e",
        "d": true,
        "name": "BMS 2 readAll",
        "props": [
            {
                "p": "payload.bmsID",
                "v": "102",
                "vt": "num"
            },
            {
                "p": "payload.command",
                "v": "readAll",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 520,
        "y": 80,
        "wires": [
            [
                "f5faff8e307183d7"
            ]
        ]
    },
    {
        "id": "2564597705f4d487",
        "type": "inject",
        "z": "2bbc91332276492e",
        "d": true,
        "name": "BMS 5 readAll",
        "props": [
            {
                "p": "payload.bmsID",
                "v": "105",
                "vt": "num"
            },
            {
                "p": "payload.command",
                "v": "readAll",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 520,
        "y": 200,
        "wires": [
            [
                "f5faff8e307183d7"
            ]
        ]
    },
    {
        "id": "5e484e39dbebb5d5",
        "type": "inject",
        "z": "2bbc91332276492e",
        "d": true,
        "name": "BMS 6 readAll",
        "props": [
            {
                "p": "payload.bmsID",
                "v": "106",
                "vt": "num"
            },
            {
                "p": "payload.command",
                "v": "readAll",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 520,
        "y": 240,
        "wires": [
            [
                "f5faff8e307183d7"
            ]
        ]
    },
    {
        "id": "649dbadc40fa764b",
        "type": "inject",
        "z": "2bbc91332276492e",
        "name": "BMS 1 read voltage",
        "props": [
            {
                "p": "payload.bmsID",
                "v": "101",
                "vt": "num"
            },
            {
                "p": "payload.command",
                "v": "read",
                "vt": "str"
            },
            {
                "p": "payload.dataIdentifier",
                "v": "voltage",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 510,
        "y": 280,
        "wires": [
            [
                "f5faff8e307183d7"
            ]
        ]
    },
    {
        "id": "97a0908849dfad19",
        "type": "inject",
        "z": "2bbc91332276492e",
        "name": "BMS 1 write Test 5",
        "props": [
            {
                "p": "payload.bmsID",
                "v": "101",
                "vt": "num"
            },
            {
                "p": "payload.command",
                "v": "write",
                "vt": "str"
            },
            {
                "p": "payload.dataIdentifier",
                "v": "cell_OverVoltageProtection",
                "vt": "str"
            },
            {
                "p": "payload.value",
                "v": "3.6",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 510,
        "y": 320,
        "wires": [
            [
                "f5faff8e307183d7"
            ]
        ]
    },
    {
        "id": "9401c5a6a600ca32",
        "type": "inject",
        "z": "2bbc91332276492e",
        "name": "BMS 1 write Test 6",
        "props": [
            {
                "p": "payload.bmsID",
                "v": "101",
                "vt": "num"
            },
            {
                "p": "payload.command",
                "v": "write",
                "vt": "str"
            },
            {
                "p": "payload.dataIdentifier",
                "v": "cell_OverVoltageProtection",
                "vt": "str"
            },
            {
                "p": "payload.value",
                "v": "3.65",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 510,
        "y": 360,
        "wires": [
            [
                "f5faff8e307183d7"
            ]
        ]
    },
    {
        "id": "c719194a3256fe13",
        "type": "inject",
        "z": "2bbc91332276492e",
        "name": "BMS 1 pairCode",
        "props": [
            {
                "p": "payload.bmsID",
                "v": "101",
                "vt": "num"
            },
            {
                "p": "payload.command",
                "v": "pairCode",
                "vt": "str"
            },
            {
                "p": "payload.value",
                "v": "1234",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 520,
        "y": 400,
        "wires": [
            [
                "f5faff8e307183d7"
            ]
        ]
    },
    {
        "id": "fd20d47ffc898f67",
        "type": "inject",
        "z": "2bbc91332276492e",
        "name": "BMS 1 readAll",
        "props": [
            {
                "p": "payload.bmsID",
                "v": "101",
                "vt": "num"
            },
            {
                "p": "payload.command",
                "v": "readAll",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 530,
        "y": 440,
        "wires": [
            [
                "f5faff8e307183d7"
            ]
        ]
    },
    {
        "id": "5df00c0abfd0fa43",
        "type": "debug",
        "z": "2bbc91332276492e",
        "name": "Bus usage",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 320,
        "wires": []
    },
    {
        "id": "cb4a21dcd0f5ee8e",
        "type": "serial request",
        "z": "2bbc91332276492e",
        "name": "",
        "serial": "dab4783082f5643b",
        "x": 1890,
        "y": 200,
        "wires": [
            [
                "845ba4930bc13aa4",
                "eced5acf8898859f"
            ]
        ]
    },
    {
        "id": "4c97dd09f00595ba",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "JK BMS to ioBroker",
        "func": "let ioBrokerPath;\nif ('payload' in msg) {\n    for (let ii = 0; ii < 2; ii++) {\n        switch (ii) {\n            case 0:\n                ioBrokerPath = 'node-red.0.devices.JK-BMS.' + (msg.payload.bmsID - 100) + '.';\n                break;\n            case 1:\n                ioBrokerPath = ioBrokerPath + msg.payload.dataSource + '.';\n                break;\n        }\n\n        // voltage\n        if ('voltage' in msg.payload) {\n            node.send({\n                payload: msg.payload.voltage,\n                topic: ioBrokerPath + 'voltage',\n                stateName: {\n                    \"en\": \"Voltage\",\n                    \"de\": \"Spannung\"\n                },\n                stateRole: 'state',\n                stateType: 'number',\n                stateUnit: 'V',\n                stateReadonly: true,\n                ack: true,\n            });\n        }\n\n        // current\n        if ('current' in msg.payload) {\n            node.send({\n                payload: msg.payload.current,\n                topic: ioBrokerPath + 'current',\n                stateName: {\n                    \"en\": \"Current\",\n                    \"de\": \"Stromstärke\"\n                },\n                stateRole: 'state',\n                stateType: 'number',\n                stateUnit: 'A',\n                stateReadonly: true,\n                ack: true,\n            });\n        }\n\n        // power\n        if ('power' in msg.payload) {\n            node.send({\n                payload: msg.payload.power,\n                topic: ioBrokerPath + 'power',\n                stateName: {\n                    \"en\": \"Power\",\n                    \"de\": \"Leistung\"\n                },\n                stateRole: 'state',\n                stateType: 'number',\n                stateUnit: 'W',\n                stateReadonly: true,\n                ack: true,\n            });\n        }\n\n        // real_voltage\n        if ('real_voltage' in msg.payload) {\n            node.send({\n                payload: msg.payload.real_voltage,\n                topic: ioBrokerPath + 'real_voltage',\n                stateName: {\n                    \"en\": \"Voltage (calibrated)\",\n                    \"de\": \"Spannung (kalibriert)\"\n                },\n                stateRole: 'state',\n                stateType: 'number',\n                stateUnit: 'V',\n                stateReadonly: true,\n                ack: true,\n            });\n        }\n\n        // real_current\n        if ('real_current' in msg.payload) {\n            node.send({\n                payload: msg.payload.real_current,\n                topic: ioBrokerPath + 'real_current',\n                stateName: {\n                    \"en\": \"Current (calibrated)\",\n                    \"de\": \"Stromstärke (kalibriert)\"\n                },\n                stateRole: 'state',\n                stateType: 'number',\n                stateUnit: 'A',\n                stateReadonly: true,\n                ack: true,\n            });\n        }\n\n        // real_power\n        if ('real_power' in msg.payload) {\n            node.send({\n                payload: msg.payload.real_power,\n                topic: ioBrokerPath + 'real_power',\n                stateName: {\n                    \"en\": \"Power (calibrated)\",\n                    \"de\": \"Leistung (kalibriert)\"\n                },\n                stateRole: 'state',\n                stateType: 'number',\n                stateUnit: 'W',\n                stateReadonly: true,\n                ack: true,\n            });\n        }\n\n        // state\n        if ('state' in msg.payload) {\n            node.send({\n                payload: msg.payload.state,\n                topic: ioBrokerPath + 'status',\n                stateName: {\n                    \"en\": \"State\",\n                    \"de\": \"Status\"\n                },\n                stateRole: 'state',\n                stateType: 'string',\n                stateReadonly: true,\n                ack: true,\n            });\n        }\n\n        // remainigBattery\n        if ('remainigBattery' in msg.payload) {\n            node.send({\n                payload: msg.payload.remainigBattery,\n                topic: ioBrokerPath + 'remainigBattery',\n                stateName: {\n                    \"en\": \"Battery level\",\n                    \"de\": \"Akkustand\"\n                },\n                stateRole: 'state',\n                stateType: 'number',\n                stateUnit: '%',\n                stateMin: 0,\n                stateMax: 100,\n                stateReadonly: true,\n                ack: true,\n            });\n        }\n\n\n\n        //////////////////////////////////////////////////\n        // temperature\n        //////////////////////////////////////////////////\n        if ('temperature' in msg.payload) {\n            \n            // temperature internal\n            if ('internal' in msg.payload.temperature) {\n                node.send({\n                    payload: msg.payload.temperature.internal,\n                    topic: ioBrokerPath + 'temperature.internal',\n                    stateName: {\n                        \"en\": \"Temperature Mosfet\",\n                        \"de\": \"Temperatur Mosfet\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'number',\n                    stateUnit: '°C',\n                    stateMin: -40,\n                    stateMax: 100,\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // temperature battery1\n            if ('battery1' in msg.payload.temperature) {\n                node.send({\n                    payload: msg.payload.temperature.battery1,\n                    topic: ioBrokerPath + 'temperature.battery1',\n                    stateName: {\n                        \"en\": \"Temperature battery 1\",\n                        \"de\": \"Temperatur Akku 1\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'number',\n                    stateUnit: '°C',\n                    stateMin: -40,\n                    stateMax: 100,\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // temperature battery2\n            if ('battery2' in msg.payload.temperature) {\n                node.send({\n                    payload: msg.payload.temperature.battery2,\n                    topic: ioBrokerPath + 'temperature.battery2',\n                    stateName: {\n                        \"en\": \"Temperature battery 2\",\n                        \"de\": \"Temperatur Akku 2\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'number',\n                    stateUnit: '°C',\n                    stateMin: -40,\n                    stateMax: 100,\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n        }\n\n\n\n        //////////////////////////////////////////////////\n        // status\n        //////////////////////////////////////////////////\n        if ('status' in msg.payload) {\n\n            // status chargingActive\n            if ('chargingActive' in msg.payload.status) {\n                node.send({\n                    payload: msg.payload.status.chargingActive,\n                    topic: ioBrokerPath + 'status.chargingActive',\n                    stateName: {\n                        \"en\": \"Charging active\",\n                        \"de\": \"Laden aktiviert\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // status dischargingActive\n            if ('dischargingActive' in msg.payload.status) {\n                node.send({\n                    payload: msg.payload.status.dischargingActive,\n                    topic: ioBrokerPath + 'status.dischargingActive',\n                    stateName: {\n                        \"en\": \"Discharging active\",\n                        \"de\": \"Entladen aktiviert\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // status balancingActive\n            if ('balancingActive' in msg.payload.status) {\n                node.send({\n                    payload: msg.payload.status.balancingActive,\n                    topic: ioBrokerPath + 'status.balancingActive',\n                    stateName: {\n                        \"en\": \"Balancing active\",\n                        \"de\": \"Ausgleichen aktiv\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // status batteryDisconnected\n            if ('batteryDisconnected' in msg.payload.status) {\n                node.send({\n                    payload: msg.payload.status.batteryDisconnected,\n                    topic: ioBrokerPath + 'status.batteryDisconnected',\n                    stateName: {\n                        \"en\": \"Battery disconnected\",\n                        \"de\": \"Akku nicht verbunden\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n        }\n        \n\n\n        //////////////////////////////////////////////////\n        // warning\n        //////////////////////////////////////////////////\n        if ('warning' in msg.payload) {\n\n            // warning lowCapacity\n            if ('lowCapacity' in msg.payload.warning) {\n                node.send({\n                    payload: msg.payload.warning.lowCapacity,\n                    topic: ioBrokerPath + 'warning.lowCapacity',\n                    stateName: {\n                        \"en\": \"Low capacity\",\n                        \"de\": \"Niedrige Kapazität\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // warning mosfetOverTemperature\n            if ('mosfetOverTemperature' in msg.payload.warning) {\n                node.send({\n                    payload: msg.payload.warning.mosfetOverTemperature,\n                    topic: ioBrokerPath + 'warning.mosfetOverTemperature',\n                    stateName: {\n                        \"en\": \"Overtemperature mosfet\",\n                        \"de\": \"Übertemperatur Mosfet\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // warning chargingOverVoltage\n            if ('chargingOverVoltage' in msg.payload.warning) {\n                node.send({\n                    payload: msg.payload.warning.chargingOverVoltage,\n                    topic: ioBrokerPath + 'warning.chargingOverVoltage',\n                    stateName: {\n                        \"en\": \"Overvoltage while charging\",\n                        \"de\": \"Überspannung beim Laden\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // warning dischargingUnderVoltage\n            if ('dischargingUnderVoltage' in msg.payload.warning) {\n                node.send({\n                    payload: msg.payload.warning.dischargingUnderVoltage,\n                    topic: ioBrokerPath + 'warning.dischargingUnderVoltage',\n                    stateName: {\n                        \"en\": \"Undervoltage while discharging\",\n                        \"de\": \"Unterspannung beim Entladen\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // warning batteryOverTemperature1\n            if ('batteryOverTemperature1' in msg.payload.warning) {\n                node.send({\n                    payload: msg.payload.warning.batteryOverTemperature1,\n                    topic: ioBrokerPath + 'warning.batteryOverTemperature1',\n                    stateName: {\n                        \"en\": \"Übertemperatur battery 1\",\n                        \"de\": \"Übertemperatur Akku 1\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // warning chargingOverCurrent\n            if ('chargingOverCurrent' in msg.payload.warning) {\n                node.send({\n                    payload: msg.payload.warning.chargingOverCurrent,\n                    topic: ioBrokerPath + 'warning.chargingOverCurrent',\n                    stateName: {\n                        \"en\": \"Charging overcurrent\",\n                        \"de\": \"Ladestrom überschritten\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // warning dischargingOverCurrent\n            if ('dischargingOverCurrent' in msg.payload.warning) {\n                node.send({\n                    payload: msg.payload.warning.dischargingOverCurrent,\n                    topic: ioBrokerPath + 'warning.dischargingOverCurrent',\n                    stateName: {\n                        \"en\": \"Discharging overcurrent\",\n                        \"de\": \"Entladestrom überschritten\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // warning cellVoltageDifference\n            if ('cellVoltageDifference' in msg.payload.warning) {\n                node.send({\n                    payload: msg.payload.warning.cellVoltageDifference,\n                    topic: ioBrokerPath + 'warning.cellVoltageDifference',\n                    stateName: {\n                        \"en\": \"Cellvoltage difference\",\n                        \"de\": \"Zellspannungsdifferenz\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // warning batteryOverTemperature2\n            if ('batteryOverTemperature2' in msg.payload.warning) {\n                node.send({\n                    payload: msg.payload.warning.batteryOverTemperature2,\n                    topic: ioBrokerPath + 'warning.batteryOverTemperature2',\n                    stateName: {\n                        \"en\": \"Übertemperatur battery 2\",\n                        \"de\": \"Übertemperatur Akku 2\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // warning batteryUnderTemperature\n            if ('batteryUnderTemperature' in msg.payload.warning) {\n                node.send({\n                    payload: msg.payload.warning.batteryUnderTemperature,\n                    topic: ioBrokerPath + 'warning.batteryUnderTemperature',\n                    stateName: {\n                        \"en\": \"Undertemperatur battery\",\n                        \"de\": \"Untertemperatur Akku\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // warning cellOverVoltage\n            if ('cellOverVoltage' in msg.payload.warning) {\n                node.send({\n                    payload: msg.payload.warning.cellOverVoltage,\n                    topic: ioBrokerPath + 'warning.cellOverVoltage',\n                    stateName: {\n                        \"en\": \"Overvoltage batterycell\",\n                        \"de\": \"Überspannung Akkuzelle\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // warning cellUnderVoltage\n            if ('cellUnderVoltage' in msg.payload.warning) {\n                node.send({\n                    payload: msg.payload.warning.cellUnderVoltage,\n                    topic: ioBrokerPath + 'warning.cellUnderVoltage',\n                    stateName: {\n                        \"en\": \"Undervoltage batterycell\",\n                        \"de\": \"Unterspannung Akkuzelle\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // warning alarm309_AProtection\n            if ('alarm309_AProtection' in msg.payload.warning) {\n                node.send({\n                    payload: msg.payload.warning.alarm309_AProtection,\n                    topic: ioBrokerPath + 'warning.alarm309_AProtection',\n                    stateName: {\n                        \"en\": \"A Protection\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n\n            // warning alarm309_BProtection\n            if ('alarm309_BProtection' in msg.payload.warning) {\n                node.send({\n                    payload: msg.payload.warning.alarm309_BProtection,\n                    topic: ioBrokerPath + 'warning.alarm309_BProtection',\n                    stateName: {\n                        \"en\": \"B Protection\"\n                    },\n                    stateRole: 'state',\n                    stateType: 'boolean',\n                    stateReadonly: true,\n                    ack: true,\n                });\n            }\n        }\n\n\n\n        //////////////////////////////////////////////////\n        // cells\n        //////////////////////////////////////////////////\n        if (('cell_voltage' in msg.payload) && ('cells' in msg.payload)) {\n\n            // cells\n            node.send({\n                payload: msg.payload.cells,\n                topic: ioBrokerPath + 'cells',\n                stateName: {\n                    \"en\": \"Battery cells\",\n                    \"de\": \"Akkuzellen\"\n                },\n                stateRole: 'state',\n                stateType: 'number',\n                stateReadonly: true,\n                ack: true,\n            });\n\n            // cells voltage\n            for (let cell = 0; cell < msg.payload.cells; cell++) {\n                if (cell in msg.payload.cell_voltage) {\n                    node.send({\n                        payload: msg.payload.cell_voltage[cell],\n                        topic: ioBrokerPath + 'cells.' + (cell + 1) + '.voltage',\n                        stateName: {\n                            \"en\": \"Voltage\",\n                            \"de\": \"Spannung\"\n                        },\n                        stateRole: 'state',\n                        stateType: 'number',\n                        stateUnit: 'V',\n                        stateReadonly: true,\n                        ack: true,\n                    });\n                }\n            }\n        }\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3970,
        "y": 220,
        "wires": [
            [
                "6386d32500e70801"
            ]
        ]
    },
    {
        "id": "6386d32500e70801",
        "type": "ioBroker out",
        "z": "2bbc91332276492e",
        "name": "",
        "topic": "",
        "ack": "true",
        "autoCreate": "true",
        "stateName": "",
        "role": "",
        "payloadType": "",
        "readonly": "",
        "stateUnit": "",
        "stateMin": "",
        "stateMax": "",
        "x": 4200,
        "y": 220,
        "wires": []
    },
    {
        "id": "cb1e326dbe4a67a0",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "JK BMS to ioBroker",
        "links": [
            "d3845e7f438aa2bd"
        ],
        "x": 3825,
        "y": 220,
        "wires": [
            [
                "4c97dd09f00595ba"
            ]
        ]
    },
    {
        "id": "d3845e7f438aa2bd",
        "type": "link out",
        "z": "2bbc91332276492e",
        "name": "BMS",
        "mode": "link",
        "links": [
            "cb1e326dbe4a67a0",
            "eaacf0394eb477c3",
            "efaee95266809c2a"
        ],
        "x": 3175,
        "y": 120,
        "wires": []
    },
    {
        "id": "5a7caaba3a3bafb8",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "calculate real_(calibrated) values",
        "func": "if ('payload' in msg) {\n\n    // calculate real_voltage\n    if ('voltage' in msg.payload) {\n        const voltage_calibrationData = flow.get(msg.payload.bmsID + '_voltage_calibrationData', 'persistent') || null;\n        if (voltage_calibrationData != null) {\n            msg.payload.device_voltage = msg.payload.voltage;\n            const voltage_regression = regression.polynomial(voltage_calibrationData);\n            msg.payload.voltage = voltage_regression.predict(msg.payload.current);\n        } else {\n        }\n    }\n\n    // calculate real_current\n    if ('current' in msg.payload) {\n        const current_calibrationData = flow.get(msg.payload.bmsID + '_current_calibrationData', 'persistent') || null;\n        if (current_calibrationData != null) {\n            msg.payload.device_current = msg.payload.current;\n            const current_regression = regression.polynomial(current_calibrationData);\n            msg.payload.current = current_regression.predict(msg.payload.current);\n        }\n    }\n\n    // calculate real_power\n    if (('device_voltage' in msg.payload) && ('device_current' in msg.payload)) {\n        msg.payload.power = Math.round(msg.payload.voltage * msg.payload.current * 10) / 10;\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "regression",
                "module": "regression"
            }
        ],
        "x": 2920,
        "y": 200,
        "wires": [
            [
                "f998bf2f53326cfc",
                "d3845e7f438aa2bd"
            ]
        ]
    },
    {
        "id": "c7ca700e13bc4f8b",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 01 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 1480,
        "wires": []
    },
    {
        "id": "f696d5941fee807d",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 02 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 1520,
        "wires": []
    },
    {
        "id": "0c904075e75ce331",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 03 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 1560,
        "wires": []
    },
    {
        "id": "51d5545443a8e577",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 04 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 1600,
        "wires": []
    },
    {
        "id": "ab855f48df4b429f",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 05 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 1640,
        "wires": []
    },
    {
        "id": "f36e4d9e10759704",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 06 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 1680,
        "wires": []
    },
    {
        "id": "35dc1f6fe64fec89",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 07 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 1720,
        "wires": []
    },
    {
        "id": "2918b69a174dc6d4",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 08 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 1760,
        "wires": []
    },
    {
        "id": "31818c6c2ba2e486",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 09 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 1800,
        "wires": []
    },
    {
        "id": "ba943b80e37a3227",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 10 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 1840,
        "wires": []
    },
    {
        "id": "a68ec722738e2d63",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 11 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 1880,
        "wires": []
    },
    {
        "id": "e0d199a5acb24faf",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 12 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 1920,
        "wires": []
    },
    {
        "id": "0f265565054a063f",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 13 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 1960,
        "wires": []
    },
    {
        "id": "08271976132ac73d",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 14 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 2000,
        "wires": []
    },
    {
        "id": "553c2798d558b735",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 15 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 2040,
        "wires": []
    },
    {
        "id": "332ded809dbce9dd",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "9b81815113e7ff1b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 16 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 2080,
        "wires": []
    },
    {
        "id": "e0a7bdc6a29fdb1e",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "fca27fb560634d0c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2170,
        "y": 520,
        "wires": []
    },
    {
        "id": "4584e2e82a27a0ff",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "fca27fb560634d0c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Strom",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "className": "",
        "x": 2150,
        "y": 560,
        "wires": []
    },
    {
        "id": "3cdd378b131e2d58",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "fca27fb560634d0c",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Leistung",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "x": 2160,
        "y": 600,
        "wires": []
    },
    {
        "id": "243d544969f09ec3",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "fca27fb560634d0c",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Akkustand",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 2170,
        "y": 680,
        "wires": []
    },
    {
        "id": "20cce5d145b47e24",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "fca27fb560634d0c",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur BMS",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 720,
        "wires": []
    },
    {
        "id": "f6bf36154a5929a6",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "fca27fb560634d0c",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur Akku 1",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 760,
        "wires": []
    },
    {
        "id": "2cc756b877df7eb8",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "fca27fb560634d0c",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur Akku 2",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 2190,
        "y": 800,
        "wires": []
    },
    {
        "id": "17c58832d20c11fd",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 01 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1480,
        "wires": []
    },
    {
        "id": "8b2d75f721187697",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 02 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1520,
        "wires": []
    },
    {
        "id": "b35ac3aca844df0a",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 03 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1560,
        "wires": []
    },
    {
        "id": "51c06e7007e7824f",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 04 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1600,
        "wires": []
    },
    {
        "id": "b0cd55e82b7d7c6e",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 05 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1640,
        "wires": []
    },
    {
        "id": "2fa71cbdefa612c1",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 06 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1680,
        "wires": []
    },
    {
        "id": "3e937574d2224644",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 07 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1720,
        "wires": []
    },
    {
        "id": "06322003f2120bcf",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 08 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1760,
        "wires": []
    },
    {
        "id": "6a2ba35ac8035b95",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 09 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1800,
        "wires": []
    },
    {
        "id": "405893ba8366efef",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 10 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1840,
        "wires": []
    },
    {
        "id": "45904870af9c53b2",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 11 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1880,
        "wires": []
    },
    {
        "id": "76549e8c113b718c",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 12 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1920,
        "wires": []
    },
    {
        "id": "657dfd46b144f070",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 13 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 1960,
        "wires": []
    },
    {
        "id": "1eed58c89a3ddb91",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 14 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 2000,
        "wires": []
    },
    {
        "id": "e5212c0aaff03863",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 15 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 2040,
        "wires": []
    },
    {
        "id": "ead2042c17bbafa3",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "3f784624277f4ed6",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zelle 16 Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 2080,
        "wires": []
    },
    {
        "id": "9c0f95c6be7d5ee5",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "963f983e3ad73fe2",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 2950,
        "y": 520,
        "wires": []
    },
    {
        "id": "81b73de975bd2d51",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "963f983e3ad73fe2",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Strom",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "className": "",
        "x": 2930,
        "y": 560,
        "wires": []
    },
    {
        "id": "dd958b6df2bd25a9",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "963f983e3ad73fe2",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Leistung",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "x": 2940,
        "y": 600,
        "wires": []
    },
    {
        "id": "9f0a7f37455a1aa5",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "963f983e3ad73fe2",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Akkustand",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 2950,
        "y": 680,
        "wires": []
    },
    {
        "id": "ff1c018b88142b38",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "963f983e3ad73fe2",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur BMS",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 720,
        "wires": []
    },
    {
        "id": "987f5d5b1491ba67",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "963f983e3ad73fe2",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur Akku 1",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 760,
        "wires": []
    },
    {
        "id": "4c3f03abdb923158",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "963f983e3ad73fe2",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur Akku 2",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 2970,
        "y": 800,
        "wires": []
    },
    {
        "id": "3aaf8087a70c51f9",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "chargingActive",
        "tooltip": "",
        "group": "658912aac4f1386e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2180,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "1a5fa0179210ba40",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "dischargingActive",
        "tooltip": "",
        "group": "658912aac4f1386e",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2190,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "3637c99a59e86d60",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "balancingActive",
        "tooltip": "",
        "group": "658912aac4f1386e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2180,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "645928237b8184bb",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "batteryDisconnected",
        "tooltip": "",
        "group": "658912aac4f1386e",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2200,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "04400e504112a0e0",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "lowCapacity",
        "tooltip": "",
        "group": "658912aac4f1386e",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2170,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "833c247a0f3c2241",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "powerTubeOvertemperature",
        "tooltip": "",
        "group": "658912aac4f1386e",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2220,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "f70777957923fc24",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "chargingOvervoltage",
        "tooltip": "",
        "group": "658912aac4f1386e",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2200,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "962b6b9bb462dfc8",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "dischargingUndervoltage",
        "tooltip": "",
        "group": "658912aac4f1386e",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2210,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "b0a2b941b8b3b275",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellPressureDifference",
        "tooltip": "",
        "group": "658912aac4f1386e",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2200,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "adf587252baf51a3",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "overtempAlarmInTheBatteryBox",
        "tooltip": "",
        "group": "658912aac4f1386e",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2230,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "35f2a25e3370580a",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "batteryLowTemperature",
        "tooltip": "",
        "group": "658912aac4f1386e",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2210,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "b1a0fd4fccdae182",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellOvervoltage",
        "tooltip": "",
        "group": "658912aac4f1386e",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2180,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "5b4c773e7fbd15e7",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellUndervoltage",
        "tooltip": "",
        "group": "658912aac4f1386e",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2190,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "420b59a53368bde3",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "alarm309_AProtection",
        "tooltip": "",
        "group": "658912aac4f1386e",
        "order": 15,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2200,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "a21b4b40811172be",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "alarm309_BProtection",
        "tooltip": "",
        "group": "658912aac4f1386e",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2200,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "17b4093ebe802e23",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "chargingActive",
        "tooltip": "",
        "group": "32874d9d953cd5a5",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2960,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "8f0a473fe987a85a",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "dischargingActive",
        "tooltip": "",
        "group": "32874d9d953cd5a5",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2970,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "2f4adbe6f1b8d08a",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "balancingActive",
        "tooltip": "",
        "group": "32874d9d953cd5a5",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2960,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "aa0d2ec7aadd1674",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "batteryDisconnected",
        "tooltip": "",
        "group": "32874d9d953cd5a5",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2980,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "a5b0542640d2cd23",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "lowCapacity",
        "tooltip": "",
        "group": "32874d9d953cd5a5",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2950,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "369b36b879aeb7ce",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "powerTubeOvertemperature",
        "tooltip": "",
        "group": "32874d9d953cd5a5",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3000,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "6c574f6806d240ab",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "chargingOvervoltage",
        "tooltip": "",
        "group": "32874d9d953cd5a5",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2980,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "e1d2540853943841",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "dischargingUndervoltage",
        "tooltip": "",
        "group": "32874d9d953cd5a5",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2990,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "c484adea32b9cd22",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellPressureDifference",
        "tooltip": "",
        "group": "32874d9d953cd5a5",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2980,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "9bc98cfcfc1a6dd5",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "overtempAlarmInTheBatteryBox",
        "tooltip": "",
        "group": "32874d9d953cd5a5",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 3010,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "d88aa81b844340f4",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "batteryLowTemperature",
        "tooltip": "",
        "group": "32874d9d953cd5a5",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2990,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "aa9be9fc91080a6d",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellOvervoltage",
        "tooltip": "",
        "group": "32874d9d953cd5a5",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2960,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "16698ffcdfec8eec",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "cellUndervoltage",
        "tooltip": "",
        "group": "32874d9d953cd5a5",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2970,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "090842b33a407724",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "alarm309_AProtection",
        "tooltip": "",
        "group": "32874d9d953cd5a5",
        "order": 15,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2980,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "8a814f1722090bdf",
        "type": "ui_switch",
        "z": "2bbc91332276492e",
        "name": "",
        "label": "alarm309_BProtection",
        "tooltip": "",
        "group": "32874d9d953cd5a5",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2980,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "786c0e18aca065e8",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "fca27fb560634d0c",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2150,
        "y": 640,
        "wires": []
    },
    {
        "id": "5a8302c9e6668a55",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "963f983e3ad73fe2",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2930,
        "y": 640,
        "wires": []
    },
    {
        "id": "3ee7387ac85159d0",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 4 Gesamt",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('payload' in msg) {\n    i += 1; outputMessages[i] = { payload: msg.payload.voltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.current } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.power } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.current_direction } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.remainigBattery } || null;\n\n    if ('temperatur' in msg.payload) {\n        i += 1; outputMessages[i] = { payload: msg.payload.temperatur.internal } || null;\n        i += 1; outputMessages[i] = { payload: msg.payload.temperatur.battery1 } || null;\n        i += 1; outputMessages[i] = { payload: msg.payload.temperatur.battery2 } || null;\n    }\n}\n\nreturn outputMessages;",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 660,
        "wires": [
            [
                "9c0f95c6be7d5ee5"
            ],
            [
                "81b73de975bd2d51"
            ],
            [
                "dd958b6df2bd25a9"
            ],
            [
                "5a8302c9e6668a55"
            ],
            [
                "9f0a7f37455a1aa5"
            ],
            [
                "ff1c018b88142b38"
            ],
            [
                "987f5d5b1491ba67"
            ],
            [
                "4c3f03abdb923158"
            ]
        ]
    },
    {
        "id": "3607a1d3484094f4",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 4 Einstellungen",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('settings' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_UnderVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtectionRecovery } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtectionRecovery } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_DischargeOverCurrentProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_DischargeOverCurrentProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_ChargeOverCurrentProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_ChargeOverCurrentProtectionDelay } || null;\n    /*\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    */\n}\n\nreturn outputMessages;",
        "outputs": 23,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2660,
        "y": 2460,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "cbec6df5b7cb0ffa",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 4 Status",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('status' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.status.chargingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.dischargingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.balancingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.batteryDisconnected } || null;\n}\nif ('warning' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.lowCapacity } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.powerTubeOvertemperature } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.chargingOvervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.dischargingUndervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellPressureDifference } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.overtemperaturAlarmInTheBatteryBox } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.batteryLowTemperature } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellOvervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellUndervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.alarm309_AProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.alarm309_BProtection } || null;\n}\n\nreturn outputMessages;",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 1140,
        "wires": [
            [
                "17b4093ebe802e23"
            ],
            [
                "8f0a473fe987a85a"
            ],
            [
                "2f4adbe6f1b8d08a"
            ],
            [
                "aa0d2ec7aadd1674"
            ],
            [
                "a5b0542640d2cd23"
            ],
            [
                "369b36b879aeb7ce"
            ],
            [
                "6c574f6806d240ab"
            ],
            [
                "e1d2540853943841"
            ],
            [
                "c484adea32b9cd22"
            ],
            [
                "9bc98cfcfc1a6dd5"
            ],
            [
                "d88aa81b844340f4"
            ],
            [
                "aa9be9fc91080a6d"
            ],
            [
                "16698ffcdfec8eec"
            ],
            [
                "090842b33a407724"
            ],
            [
                "8a814f1722090bdf"
            ]
        ]
    },
    {
        "id": "5c6408bfc5725a6e",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 4 Zellspannung",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('cell_voltage' in msg.payload) {\n    for (let cell = 0; cell < 16; cell++) {\n        i += 1; outputMessages[i] = { payload: msg.payload.cell_voltage[cell] } || null;\n    }\n}\n\nreturn outputMessages;",
        "outputs": 16,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2660,
        "y": 1780,
        "wires": [
            [
                "17c58832d20c11fd"
            ],
            [
                "8b2d75f721187697"
            ],
            [
                "b35ac3aca844df0a"
            ],
            [
                "51c06e7007e7824f"
            ],
            [
                "b0cd55e82b7d7c6e"
            ],
            [
                "2fa71cbdefa612c1"
            ],
            [
                "3e937574d2224644"
            ],
            [
                "06322003f2120bcf"
            ],
            [
                "6a2ba35ac8035b95"
            ],
            [
                "405893ba8366efef"
            ],
            [
                "45904870af9c53b2"
            ],
            [
                "76549e8c113b718c"
            ],
            [
                "657dfd46b144f070"
            ],
            [
                "1eed58c89a3ddb91"
            ],
            [
                "e5212c0aaff03863"
            ],
            [
                "ead2042c17bbafa3"
            ]
        ]
    },
    {
        "id": "642ce361bd8a6419",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 4 Zellspannung",
        "links": [
            "799130b531a66900"
        ],
        "x": 2515,
        "y": 1780,
        "wires": [
            [
                "5c6408bfc5725a6e"
            ]
        ]
    },
    {
        "id": "a2f890e16a2c8736",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 4 Gesamt",
        "links": [
            "799130b531a66900"
        ],
        "x": 2515,
        "y": 660,
        "wires": [
            [
                "3ee7387ac85159d0"
            ]
        ]
    },
    {
        "id": "f14651fbc8633ce4",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 4 Status",
        "links": [
            "799130b531a66900"
        ],
        "x": 2515,
        "y": 1140,
        "wires": [
            [
                "cbec6df5b7cb0ffa"
            ]
        ]
    },
    {
        "id": "b68c8a4cce317973",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 4 Einstellungen",
        "links": [
            "799130b531a66900"
        ],
        "x": 2515,
        "y": 2460,
        "wires": [
            [
                "3607a1d3484094f4"
            ]
        ]
    },
    {
        "id": "1666504cabf13125",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 3 Gesamt",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('payload' in msg) {\n    i += 1; outputMessages[i] = { payload: msg.payload.voltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.current } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.power } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.current_direction } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.remainigBattery } || null;\n\n    if ('temperatur' in msg.payload) {\n        i += 1; outputMessages[i] = { payload: msg.payload.temperatur.internal } || null;\n        i += 1; outputMessages[i] = { payload: msg.payload.temperatur.battery1 } || null;\n        i += 1; outputMessages[i] = { payload: msg.payload.temperatur.battery2 } || null;\n    }\n}\n\nreturn outputMessages;",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 660,
        "wires": [
            [
                "e0a7bdc6a29fdb1e"
            ],
            [
                "4584e2e82a27a0ff"
            ],
            [
                "3cdd378b131e2d58"
            ],
            [
                "786c0e18aca065e8"
            ],
            [
                "243d544969f09ec3"
            ],
            [
                "20cce5d145b47e24"
            ],
            [
                "f6bf36154a5929a6"
            ],
            [
                "2cc756b877df7eb8"
            ]
        ]
    },
    {
        "id": "d263cd3a07c0f3fc",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 3 Einstellungen",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('settings' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_UnderVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtectionRecovery } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_OverVoltageProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtectionRecovery } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.cell_UnderVoltageProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_DischargeOverCurrentProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_DischargeOverCurrentProtectionDelay } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_ChargeOverCurrentProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_ChargeOverCurrentProtectionDelay } || null;\n    /*\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.settings.pack_OverVoltageProtection } || null;\n    */\n}\n\nreturn outputMessages;",
        "outputs": 23,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 2460,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "7b19b7dbeec42cbb",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 3 Status",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('status' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.status.chargingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.dischargingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.balancingActive } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.status.batteryDisconnected } || null;\n}\nif ('warning' in msg.payload) {\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.lowCapacity } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.powerTubeOvertemperature } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.chargingOvervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.dischargingUndervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellPressureDifference } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.overtemperaturAlarmInTheBatteryBox } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.batteryLowTemperature } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellOvervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.cellUndervoltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.alarm309_AProtection } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.warning.alarm309_BProtection } || null;\n}\n\nreturn outputMessages;",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 1140,
        "wires": [
            [
                "3aaf8087a70c51f9"
            ],
            [
                "1a5fa0179210ba40"
            ],
            [
                "3637c99a59e86d60"
            ],
            [
                "645928237b8184bb"
            ],
            [
                "04400e504112a0e0"
            ],
            [
                "833c247a0f3c2241"
            ],
            [
                "f70777957923fc24"
            ],
            [
                "962b6b9bb462dfc8"
            ],
            [
                "b0a2b941b8b3b275"
            ],
            [
                "adf587252baf51a3"
            ],
            [
                "35f2a25e3370580a"
            ],
            [
                "b1a0fd4fccdae182"
            ],
            [
                "5b4c773e7fbd15e7"
            ],
            [
                "420b59a53368bde3"
            ],
            [
                "a21b4b40811172be"
            ]
        ]
    },
    {
        "id": "aa161a6e71191b77",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 3 Zellspannung",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('cell_voltage' in msg.payload) {\n    for (let cell = 0; cell < 16; cell++) {\n        i += 1; outputMessages[i] = { payload: msg.payload.cell_voltage[cell] } || null;\n    }\n}\n\nreturn outputMessages;",
        "outputs": 16,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1780,
        "wires": [
            [
                "c7ca700e13bc4f8b"
            ],
            [
                "f696d5941fee807d"
            ],
            [
                "0c904075e75ce331"
            ],
            [
                "51d5545443a8e577"
            ],
            [
                "ab855f48df4b429f"
            ],
            [
                "f36e4d9e10759704"
            ],
            [
                "35dc1f6fe64fec89"
            ],
            [
                "2918b69a174dc6d4"
            ],
            [
                "31818c6c2ba2e486"
            ],
            [
                "ba943b80e37a3227"
            ],
            [
                "a68ec722738e2d63"
            ],
            [
                "e0d199a5acb24faf"
            ],
            [
                "0f265565054a063f"
            ],
            [
                "08271976132ac73d"
            ],
            [
                "553c2798d558b735"
            ],
            [
                "332ded809dbce9dd"
            ]
        ]
    },
    {
        "id": "24f82a732999f57f",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 3 Zellspannung",
        "links": [
            "5ebdb7a826def5bc"
        ],
        "x": 1735,
        "y": 1780,
        "wires": [
            [
                "aa161a6e71191b77"
            ]
        ]
    },
    {
        "id": "2d2a4f32619455ac",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 3 Gesamt",
        "links": [
            "5ebdb7a826def5bc"
        ],
        "x": 1735,
        "y": 660,
        "wires": [
            [
                "1666504cabf13125"
            ]
        ]
    },
    {
        "id": "ec7c4a51dfd0433d",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 3 Status",
        "links": [
            "5ebdb7a826def5bc"
        ],
        "x": 1735,
        "y": 1140,
        "wires": [
            [
                "7b19b7dbeec42cbb"
            ]
        ]
    },
    {
        "id": "587368700cfaae92",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 3 Einstellungen",
        "links": [
            "5ebdb7a826def5bc"
        ],
        "x": 1735,
        "y": 2460,
        "wires": [
            [
                "d263cd3a07c0f3fc"
            ]
        ]
    },
    {
        "id": "c34ed48d1d05a3d2",
        "type": "inject",
        "z": "2bbc91332276492e",
        "d": true,
        "name": "BMS 3 readAll",
        "props": [
            {
                "p": "payload.bmsID",
                "v": "103",
                "vt": "num"
            },
            {
                "p": "payload.command",
                "v": "readAll",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 520,
        "y": 120,
        "wires": [
            [
                "f5faff8e307183d7"
            ]
        ]
    },
    {
        "id": "533a43f35c78fd78",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "96dc02f63898fe74",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Spannung",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "x": 610,
        "y": 2760,
        "wires": []
    },
    {
        "id": "9c92b5e8efbe8c7e",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "96dc02f63898fe74",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Strom",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "className": "",
        "x": 590,
        "y": 2800,
        "wires": []
    },
    {
        "id": "bdf803a0ee30b2a5",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "96dc02f63898fe74",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Leistung",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "x": 600,
        "y": 2840,
        "wires": []
    },
    {
        "id": "bfcd176a5e6e7fc1",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "96dc02f63898fe74",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Akkustand",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 610,
        "y": 2920,
        "wires": []
    },
    {
        "id": "5a3cf3d55d263d1a",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "96dc02f63898fe74",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur BMS",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 2960,
        "wires": []
    },
    {
        "id": "2e2d18027edfd221",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "96dc02f63898fe74",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur Akku 1",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 3000,
        "wires": []
    },
    {
        "id": "f05f7c8821630925",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "96dc02f63898fe74",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatur Akku 2",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 3040,
        "wires": []
    },
    {
        "id": "cca57068d25a6968",
        "type": "function",
        "z": "2bbc91332276492e",
        "name": "BMS 1 Gesamt",
        "func": "const outputMessages = [];\n\nlet i = -1;\nif ('payload' in msg) {\n    i += 1; outputMessages[i] = { payload: msg.payload.voltage } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.current } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.power } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.state } || null;\n    i += 1; outputMessages[i] = { payload: msg.payload.remainigBattery } || null;\n\n    if ('temperature' in msg.payload) {\n        i += 1; outputMessages[i] = { payload: msg.payload.temperature.internal } || null;\n        i += 1; outputMessages[i] = { payload: msg.payload.temperature.battery1 } || null;\n        i += 1; outputMessages[i] = { payload: msg.payload.temperature.battery2 } || null;\n    }\n}\n\nreturn outputMessages;",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 2900,
        "wires": [
            [
                "533a43f35c78fd78"
            ],
            [
                "9c92b5e8efbe8c7e"
            ],
            [
                "bdf803a0ee30b2a5"
            ],
            [
                "d347f73896cfa9c1"
            ],
            [
                "bfcd176a5e6e7fc1"
            ],
            [
                "5a3cf3d55d263d1a"
            ],
            [
                "2e2d18027edfd221"
            ],
            [
                "f05f7c8821630925"
            ]
        ]
    },
    {
        "id": "d347f73896cfa9c1",
        "type": "ui_text",
        "z": "2bbc91332276492e",
        "group": "96dc02f63898fe74",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 590,
        "y": 2880,
        "wires": []
    },
    {
        "id": "df8918c2c6586dca",
        "type": "link in",
        "z": "2bbc91332276492e",
        "name": "BMS 1 Gesamt",
        "links": [
            "e7730785a2e06452"
        ],
        "x": 155,
        "y": 2900,
        "wires": [
            [
                "cca57068d25a6968"
            ]
        ]
    },
    {
        "id": "a12adcdff0e51ca6",
        "type": "inject",
        "z": "2bbc91332276492e",
        "d": true,
        "name": "BMS 4 readAll",
        "props": [
            {
                "p": "payload.bmsID",
                "v": "104",
                "vt": "num"
            },
            {
                "p": "payload.command",
                "v": "readAll",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 520,
        "y": 160,
        "wires": [
            [
                "f5faff8e307183d7"
            ]
        ]
    },
    {
        "id": "6435482415dca2cf",
        "type": "ui_spacer",
        "z": "2bbc91332276492e",
        "name": "spacer",
        "group": "11ee4daf4a95fcab",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "10a006adf03adc08",
        "type": "ui_spacer",
        "z": "2bbc91332276492e",
        "name": "spacer",
        "group": "666c1512339b3ee7",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "592ece344e5898e1",
        "type": "ui_spacer",
        "z": "2bbc91332276492e",
        "name": "spacer",
        "group": "684770da0f52c65f",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "6db1bda30fd8f5ae",
        "type": "ui_spacer",
        "z": "2bbc91332276492e",
        "name": "spacer",
        "group": "0b1c673c3192045f",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "52313f8f9e420198",
        "type": "ui_spacer",
        "z": "2bbc91332276492e",
        "name": "spacer",
        "group": "658912aac4f1386e",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "5cfc5023284e0b8c",
        "type": "ui_spacer",
        "z": "2bbc91332276492e",
        "name": "spacer",
        "group": "32874d9d953cd5a5",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "faec23951d2ab886",
        "type": "ui_group",
        "name": "BMS1 Details",
        "tab": "4147b804df9b288b",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "79ecdf48bb8f7064",
        "type": "ui_group",
        "name": "BMS1 Gesamt",
        "tab": "4147b804df9b288b",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2f8b045ae598abdd",
        "type": "ui_group",
        "name": "BMS2 Details",
        "tab": "6af2a743eaefc9f8",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "46a25cd492714644",
        "type": "ui_group",
        "name": "BMS2 Gesamt",
        "tab": "6af2a743eaefc9f8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3f7d1453700d307e",
        "type": "ui_group",
        "name": "BMS5 Details",
        "tab": "6af2a743eaefc9f8",
        "order": 12,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1fd8e0f2bd675866",
        "type": "ui_group",
        "name": "BMS5 Gesamt",
        "tab": "6af2a743eaefc9f8",
        "order": 10,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ae87623ee72ce260",
        "type": "ui_group",
        "name": "BMS6 Details",
        "tab": "6af2a743eaefc9f8",
        "order": 15,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9bcdf74284720f6e",
        "type": "ui_group",
        "name": "BMS6 Gesamt",
        "tab": "6af2a743eaefc9f8",
        "order": 13,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "863156b2.06b228",
        "type": "ui_group",
        "name": "BMS1 Einstellungen",
        "tab": "fcde0ba988b0cf8d",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "11ee4daf4a95fcab",
        "type": "ui_group",
        "name": "BMS1 Status",
        "tab": "4147b804df9b288b",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "666c1512339b3ee7",
        "type": "ui_group",
        "name": "BMS2 Status",
        "tab": "6af2a743eaefc9f8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "684770da0f52c65f",
        "type": "ui_group",
        "name": "BMS5 Status",
        "tab": "6af2a743eaefc9f8",
        "order": 11,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0b1c673c3192045f",
        "type": "ui_group",
        "name": "BMS6 Status",
        "tab": "6af2a743eaefc9f8",
        "order": 14,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dab4783082f5643b",
        "type": "serial-port",
        "serialport": "/dev/serial/by-id/usb-1a86_USB_Single_Serial_5434025535-if00",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "0x4e",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "50",
        "bin": "bin",
        "out": "interbyte",
        "addchar": "",
        "responsetimeout": "500"
    },
    {
        "id": "9b81815113e7ff1b",
        "type": "ui_group",
        "name": "BMS3 Details",
        "tab": "6af2a743eaefc9f8",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fca27fb560634d0c",
        "type": "ui_group",
        "name": "BMS3 Gesamt",
        "tab": "6af2a743eaefc9f8",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3f784624277f4ed6",
        "type": "ui_group",
        "name": "BMS4 Details",
        "tab": "6af2a743eaefc9f8",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "963f983e3ad73fe2",
        "type": "ui_group",
        "name": "BMS4 Gesamt",
        "tab": "6af2a743eaefc9f8",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "658912aac4f1386e",
        "type": "ui_group",
        "name": "BMS3 Status",
        "tab": "6af2a743eaefc9f8",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "32874d9d953cd5a5",
        "type": "ui_group",
        "name": "BMS4 Status",
        "tab": "6af2a743eaefc9f8",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "96dc02f63898fe74",
        "type": "ui_group",
        "name": "BMS",
        "tab": "84bf0e31657b7604",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4147b804df9b288b",
        "type": "ui_tab",
        "name": "BMS Gesamt",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6af2a743eaefc9f8",
        "type": "ui_tab",
        "name": "deaktiviert",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "fcde0ba988b0cf8d",
        "type": "ui_tab",
        "d": true,
        "name": "BMS Einstellungen",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "84bf0e31657b7604",
        "type": "ui_tab",
        "name": "Franz",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]